openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Swagger For IVI web application"
  description: "IVI API Interface"
servers:
  - url: "https://test.zakaz-ivi.online:47001"
    description: "IVI API Server"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
    basicAuth:
      type: http
      scheme: basic
  security:
    - bearerAuth: [] 

  # schemas part

  schemas:
    Auth:
      type: object
      properties:
        login:
          type: string
          example: "login"
        password:
          type: string
          example: "password"
    AuthResponse:
      type: object
      properties:
        buildInfo:
          type: string
          example: ""
        refreshTokenExpiration:
          type: string
          example: "2023-10-18T11:54:35"
        token:
          type: string
          example: "ew0KImFsZyI6ICJIUzI1NiIsDQoidHlwIjogIkpXVCINCn0..."
    NewPassword:
      type: object
      properties:
        id:
          type: string
          description: user id
          example: "id"
        password:
          type: string
          example: "password"
    NewPasswordResponse:
      type: object
      properties:
        buildInfo:
          type: string
          example: ""
        refreshTokenExpiration:
          type: string
          example: "2023-10-18T11:54:35"
        token:
          type: string
          example: "ew0KImFsZyI6ICJIUzI1NiIsDQoidHlwIjogIkpXVCINCn0..."
    RegisterResponse:
      type: object
      properties:
        buildInfo:
          type: string
          example: ""
        refreshTokenExpiration:
          type: string
          example: "2023-10-18T11:54:35"
        token:
          type: string
          example: "ew0KImFsZyI6ICJIUzI1NiIsDQoidHlwIjogIkpXVCINCn0..."    
    GetRegistration:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
    GetRegistrationResponse:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
        id:
          type: string
          example: "id"
    GetRegEmail:
      type: object
      properties:
        id:
          type: string
          example: "id"
    GetUserResponse:
      type: object
      properties:
        userName:
          type: string
          example: "userName"
    GetRegEmailResponse:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
        userName?:
          type: string
          example: "userName"
    Recovery:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
        userName:
          type: string
          example: "user"
    RecoveryResponse:
      type: object
      properties:
        OK:
          type: boolean
          example: true
    Register:
      type: object
      properties:
        id:
          type: string
          example: "id"
        login:
          type: string
          example: "user"
        password:
          type: string
          example: "password"
    GetUserInfoResponse:
      type: object
      properties:
        userName:
          type: string
          example: "userName"
        email:
          type: string
          example: "user@mail.com"
        phone:
          type: string
          example: "+7 905 703-44-03"  
        surname:
          type: string
          example: "Вельяминов-Зернов"
          description: "Фамилия"
        name:
          type: string
          example: "Мухаммад-Юсуф"
          description: "Имя"
        secondName:
          type: string
          example: "Александрович"
          description: "Отчество"
        counterparties:
          type: array
          items:
            $ref: '#/components/schemas/Counterparty'
    Counterparty:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
        companyName:
          type: string
          example: "МясГазСтрой"
          description: "Название организации"
        INN:
          type: string
          example: "7810348720"
          description: "ИНН"
        KPP:
          type: string
          example: "000000000"
          description: "КПП"
        OKPO:
          type: string
          example: "000000000"
          description: "ОКПО"
        lawAddress:
          type: string
          example: "СПб, Антоновская ул., д. 14, офис 58"
          description: "Юридический адрес" 
        factAddress:
          type: string
          example: "СПб, пр. Маршала Жукова, д. 27, офис 629"
          description: "Фактический адрес"
        BIK:
          type: string
          example: "000000000"
          description: "БИК банка"
        bankName:
          type: string
          example: "АКБ Абсолют Банк (ПАО)"
          description: "Название банка"        
        corrBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Корреспондентский счет"
        privateBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Расчетный счет"
        phone:
          type: string
          example: "+7 (812) 747-65-93"
          description: "Телефон организации"
    ConfirmNewEmail:
      type: object
      properties:
        email:
          type: string
          example: "newmail@mail.com"
    SendSms:
      type: object
      properties:
        phone:
          type: string
          example: "+7 905 703-44-03"
    ConfirmPhone:
      type: object
      properties:
        smsCode:
          type: string
          example: "11111"
    SetUserFullname:
      type: object
      properties:
        name:
          type: string
          example: "Мухаммад-Юсуф"
          description: "Имя"
        surname:
          type: string
          example: "Вельяминов-Зернов" 
          description: "Фамилия"
        secondName:
          type: string
          example: "Александрович"
          description: "Отчество"
    SetNewPassword:
      type: object
      properties:
        oldPassword:
          type: string
          example: "oldPassword"
          description: "Старый пароль"
        newPassword:
          type: string
          example: "newPassword" 
          description: "Новый пароль"
    RemoveCounterparty:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
    AddCounterparty:
      type: object
      properties:
        companyName:
          type: string
          example: "МясГазСтрой"
          description: "Название организации"
        INN:
          type: string
          example: "7810348720"
          description: "ИНН"
        KPP:
          type: string
          example: "000000000"
          description: "КПП"
        OKPO:
          type: string
          example: "000000000"
          description: "ОКПО"
        lawAddress:
          type: string
          example: "СПб, Антоновская ул., д. 14, офис 58"
          description: "Юридический адрес" 
        factAddress:
          type: string
          example: "СПб, пр. Маршала Жукова, д. 27, офис 629"
          description: "Фактический адрес"
        BIK:
          type: string
          example: "000000000"
          description: "БИК банка"
        privateBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Расчетный счет"
        phone:
          type: string
          example: "+7 (812) 747-65-93"
          description: "Телефон организации"
    AddCounterpartyResponse:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
    EditCounterparty:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
        companyName:
          type: string
          example: "МясГазСтрой"
          description: "Название организации"
        INN:
          type: string
          example: "7810348720"
          description: "ИНН"
        KPP:
          type: string
          example: "000000000"
          description: "КПП"
        OKPO:
          type: string
          example: "000000000"
          description: "ОКПО"
        lawAddress:
          type: string
          example: "СПб, Антоновская ул., д. 14, офис 58"
          description: "Юридический адрес" 
        factAddress:
          type: string
          example: "СПб, пр. Маршала Жукова, д. 27, офис 629"
          description: "Фактический адрес"
        BIK:
          type: string
          example: "000000000"
          description: "БИК банка"       
        privateBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Расчетный счет"
        phone:
          type: string
          example: "+7 (812) 747-65-93"
          description: "Телефон организации"
    GetCounterpartyByINN:
      type: object
      properties:
        INN:
          type: string
          example: "7810348720"
          description: "ИНН организации"
    GetBankByBIK:
      type: object
      properties:
        BIK:
          type: string
          example: "044030653"
          description: "БИК банка"
    GetBankByBIKResponse:
      type: object
      properties:
        bankName:
          type: string
          example: "ПАО СБЕРБАНК"
          description: "Название банка"
        corrAccount:
          type: string
          example: "30101810500000000653"
          description: "Корреспондентский счет"  
    Changemail:
      type: object
      properties:
        id:
          type: string
          example: "121-ab0-32312-00ff"
          description: "id сессии"
    GetPacksInfo:
      type: object
      properties:
        availCalcs:
          type: number
          example: 59264
          description: "Доступно всего расчетов"
        availDate:
          type: string
          example: "15.01.2024"
          description: "Самая дальняя дата окончания действия из всех доступных пакетов"
        autoActivation:
          type: boolean
          example: false
          description: "Статус режима автоактивации пакетов"
        packs:
          type: array
          description: "Массив пакетов"
          items:
            $ref: '#/components/schemas/PacksItem'
        total:
          type: object
          description: "Итоговые данные по пакетам"
          properties:
            packsCount:
              type: number
              example: 21
              description: "Всего пакетов"
            calcsCount:
              type: number
              example: 4300
              description: "Всего расчетов"
            calcSum:
              type: number
              example: 12000
              description: "Стоимость всех пакетов"
            calcsUsed:
              type: number
              example: 2948
              description: "Всего использовано расчетов"
            calcsLeft:
              type: number
              example: 1352
              description: "Всего расчетов осталось"
    GetBuySchema:
      type: object
      properties:
        buySchema:
          type: array
          example: [{packCount: 100, periods: [{period: 30, sum: 300, price: 3},{period: 60, sum: 350, price: 3.5}]},{packCount: 300, periods: [{period: 90, sum: 600, price: 2}, {period: 120, sum: 700, price: 2.33}]}]
          description: "Возможные варианты покупки количества пакетов / периодов"
          items:
            type: object
            properties:
              packCount: 
                type: number
              periods: 
                type: array
                items:
                  $ref: '#/components/schemas/BuyItem'
    BuyItem:
      type: object
      properties:
        period:
          type: number
          description: "Кол-во дней, доступных для расчетов"
        sum:
          type: number
          description: "Стоимость пакета"
        price:
          type: number
          description: "Стоимость одного расчета"
    PacksItem:
      type: object
      properties:
        id:
          type: string
          example: "000 000 000 000 000 153"
          description: "id пакета"
        order:
          type: number
          example: 1
          description: "Порядок расположения неиспользованных / неполностью использованных пакетов, для остальных -1"
        activateStatus:
          type: boolean
          example: false
          description: "Статус активации пакета"
        calcsCount:
          type: number
          example: 100
          description: "Количество расчетов в пакете"
        calcsPeriod:
          type: number
          example: 90
          description: "Количество дней для расчетов в пакете"
        calcPrice:
          type: number
          example: 10
          description: "Цена одного расчета"
        calcSum:
          type: number
          example: 1000
          description: "Стоимость пакета"
        paymentDate:
          type: string
          example: "04.12.2023"
          description: "Дата оплаты" 
        calcsUsed:
          type: number
          example: 68
          description: "Расчетов использовано"
        calcsLeft:
          type: number
          example: 32
          description: "Расчетов осталось"
        activateDate:
          type: string
          example: "07.12.2023"
          description: "Дата активации пакета"
        endDate:
          type: string
          example: "06.03.2024"
          description: "Дата окончания действия пакета"
    GetPacksBill:
      type: object
      properties:
        packCountBuy:
          type: number
          example: 300
          description: "Расчетов в заказе"
        packPeriodBuy:
          type: number
          example: 60
          description: "Период заказа"
    GetPacksBillResponse:
      type: object
      properties:
        documentId:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id документа счета для скачивания"
    GetDocumentById:
      type: object
      properties:
        id:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id документа для скачивания"
    GetDocumentByIdResponse:
      type: file
    SetAutoActivation:
      type: object
      properties:
        autoActivation:
          type: boolean
          example: true
          description: "Установить режим автоактивации пакетов"
    SetPacksOrder:
      type: array
      example: [{"id": "000 000 000 000 000 153", "order": 0}, {"id": "000 000 000 000 000 158", "order": 1}]
      items:
        type: object
        properties:
          id:
            type: string
            example: "000 000 000 000 000 153"
            description: "id пакета"
          order:
            type: number
            example: 1
            description: "Порядок расположения"
    PacksActivate:
      type: object
      properties:
        id:
          type: string
          example: "000 000 000 000 000 153"
          description: "id пакета для ручной активации"
    GetOrderList:
      type: object
      example: {"orderBy": "objectNameInc", "filters": [{"fieldName": "orderDate", "searchFilter": "12.04.1961"}, {"fieldName": "comment", "searchFilter": "УрЮрВКос!"}]}
      properties:
        orderBy:
          type: string
          description: "Задание сортировки: имя поля + Inc/Dec на конце"
          default: none
          enum:
            - none
            - objectNameInc
            - orderDateInc
            - shipmentDateInc
            - commentInc
            - summInc
            - orderStatusInc
            - paymentStatusInc
            - shipmentStatusInc
            - objectNameDec
            - orderDateDec
            - shipmentDateDec
            - commentDec
            - summDec
            - orderStatusDec
            - paymentStatusDec
            - shipmentStatusDec
        filters:
          type: array
          description: "Массив фильтров по полям"
          items:
            type: object
            properties:
              fieldName:
                type: string
                description: "Имя поля"
                enum:
                  - objectName
                  - orderDate
                  - shipmentDate
                  - comment
                  - summ
                  - orderStatus
              searchFilter:
                type: string
                description: "Строка фильтрации"
    GetOrderListResponse:
      type: array
      example: [{"id": "34de-21abc-12-00e",	"objectName": "Эрмитаж", "objectAddress":"СПБ, Дворцовая наб., д.38", "orderName":"35724/22-17", "orderDate": "2023-10-01T00:00:00", "shipmentDate":"2023-10-21T00:00:00", "comment":"Лучший заказ в моей жизни", "summ":27340, "orderStatus":"ordered", "paymentStatus":"partpay", "shipmentStatus":"partoverdue"}]
      items:
        $ref: '#/components/schemas/OrderItem'
    OrderItem:
      type: object
      properties:
        id:
          type: string
          description: "ID заказа"
        objectName:
          type: string
          description: "Название объекта"
        objectAddress:
          type: string
          description: "Адрес объекта"        
        orderName:
          type: string
          description: "Номер заказа"
        orderDate:
          type: string
          description: "Дата заказа"
        shipmentDate:
          type: string
          description: "Дата отгрузки"
        comment:
          type: string
          description: "Комментарий к заказу"
        summ:
          type: number
          description: "Сумма заказа"
        orderStatus:
          type: string
          description: "Статус заказа: Новый(new), Заказано(ordered), Размещён(publish), В работе(inwork), Завершён(done), Отменён(cancel)"
          enum:
            - new
            - ordered
            - publish
            - inwork
            - done
            - cancel
        paymentStatus:
          type: string
          description: "Статус оплаты: Не оплачен(none), Частично оплачен(partpay), Просрочен(overdue), Оплачен(paid)"
          enum:
            - none
            - partpay
            - overdue
            - paid
        shipmentStatus:
          type: string
          description: "Статус отгрузки: Не отгружен(none), Отгружен частично(partshipment), Частично отгружен/просрочен(partoverdue), Просрочен(overdue), Отгружен(done)"
          enum:
            - none
            - partshipment
            - partoverdue
            - overdue
            - done
    CreateNewOrder:
      type: object
      description: "id заказа, позициями которого нужно наполнить новый заказ"
      example: {"id": "34de-21abc-12-001"}
      properties:
        id:
          type: string
          description: "id заказа на основе которого нужно создать новый"
    GetOrder:
      type: object
      example: {"id":"34de-21abc-12-004"}
      description: "id заказа"
      properties:
        id:
          type: string
    GetOrderResponse:
      type: object
      example: {"id": "34de-21abc-12-004 | 0 (если новый)", "manufacturerName": "ООО ПО Трубное Решение", "orderName": "394/270-615", "orderDate": "2023-10-18T00:00:00", "objectName": "Государственный Эрмитаж", "objectAddress": "СПб, Дворцовая наб., д.38", "orderStatus": "new", "customerName": "ИП Джумаев Мухаммади Фуркатович", "wishShipmentDate": "2023-11-28T00:00:00", "realShipmentDate": "2023-12-15T00:00:00", "comment": "Отличный заказ", "positions":[{"id": "15ef-1255-ab13", "isActual": true, "name": "Отвод х/к ст. 1.2мм, сварн., 700х400, 90град, шея1=100, шея2=100, фл25/фл25, грунт красн-кор", "count": 17, "units": "шт", "price": 6828, "altCount": 23.09, "altUnits": "пог.м", "altUnitsList": ["пог.м","м2"], "altPrice": 4496, "weight": 361.3, "square": 28.051, "system": "ПВ1, АПВ-3", "comment": "Распрекрасная позиция", "taxRate": "20/120", "taxSumm": 456.2, "discountRate": 10.7, "discountSumm": 1395.3, "summ": 116097}], "total": {"count": 17, "weight": 361.3, "square": 28.051, "taxSumm": 456.2, "discountAvg": 10.7, "discountSumm": 1395.3, "summ": 116097}}
      properties:
        id:
          type: string
          description: "ID заказа"
        manufacturerName:
          type: string
          description: "Наименование производителя"
        orderName:
          type: string
          description: "Номер заказа"
        orderDate:
          type: string
          description: "Дата заказа"  
        objectName:
          type: string
          description: "Название объекта"
        objectAddress:
          type: string
          description: "Адрес объекта"   
        orderStatus:
          type: string
          description: "Статус заказа: Новый(new), Заказано(ordered), Размещён(publish), В работе(inwork), Завершён(done), Отменён(cancel)"
          enum:
            - new
            - ordered
            - publish
            - inwork
            - done
            - cancel
        customerName:
          type: string
          description: "Наименование покупателя"
        wishShipmentDate:
          type: string
          description: "Желаемая дата отгрузки"
        realShipmentDate:
          type: string
          description: "Согласованная дата отгрузки"
        comment:
          type: string
          description: "Комментарий к заказу"
        positions:
          type: array
          items:
            $ref: '#/components/schemas/OrderPositionItem'
        total:
          type: object
          properties:  
            count:
              type: number
              description: "Количество единиц изделий"
            weight:
              type: number
              description: "Общий вес, кг"
            square:
              type: number
              description: "Общая площадь, м2"
            taxSumm:
              type: number
              description: "Общая сумма НДС"
            discountAvg:
              type: number
              description: "Усредненная по всем позициям скидка"
            discountSumm:
              type: number
              description: "Общая сумма скидки"
            summ:
              type: number
              description: "Сумма заказа"
    OrderPositionItem:
      type: object
      properties:
        id:
          type: string
          description: "id изделия"
        isActual:
          type: boolean
          description: "Актуальность данных"
        name:
          type: string
          description: "Наименование поменклатуры"
        count:
          type: number
          description: "Количество в основных единицах"
        units:
          type: string
          description: "Наименование основных единиц"
        price:
          type: number
          description: "Цена за основную единицу"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        altUnitsList:
          type: array
          description: "Список допустимых для позиции дополнительных единиц"
          items:
            type: string 
        altPrice:
          type: number
          description: "Цена за дополнительную единицу"
        weight:
          type: number
          description: "Вес, кг"
        square:
          type: number
          description: "Площадь, м2"
        system:
          type: string
          description: "Наименование системы"
        comment:
          type: string
          description: "Комментарий"
        taxRate:
          type: string
          description: "Ставка НДС"
        taxSumm:
          type: number
          description: "Сумма НДС"
        discountRate:
          type: number
          description: "Скидка в %"
        discountSumm:
          type: number
          description: "Сумма скидки"
        summ:
          type: number
          description: "Стоимость позиции"
    SaveOrderPositionItem:
      type: object
      properties:
        id:
          type: string
          description: "id изделия"
        count:
          type: number
          description: "Количество в основных единицах"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        system:
          type: string
          description: "Наименование системы"
        comment:
          type: string
          description: "Комментарий"
    GetCustomersSchema:
      type: array
      example: [{"id": "34de-21abc-12-004", "name": "ИП Джумаев Мухаммади Фуркатович"}, {"id": "34de-21abc-12-005", "name": "ООО Веселый воздуховод"}, {"id": "34de-21abc-12-006", "name": "ООО Грустный фланец"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id покупателя"
          name:
            type: string
            description: "Наименование покупателя"
    GetManufactorsSchema:
      type: array
      example: [{"id": "34de-21abc-12-004", "name": "ИП Джумаев Мухаммади Фуркатович"}, {"id": "34de-21abc-12-005", "name": "ООО Веселый воздуховод"}, {"id": "34de-21abc-12-006", "name": "ООО Грустный фланец"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id производителя"
          name:
            type: string
            description: "Наименование производтеля"
    GetOptionsResponse:
      type: object
      example: {"id": "34de-21abc-12-004", 'altUnitsVisible': true, "linearMeterRounded": "normal", "squareMeterRounded": "ceil", "systemVisible": false, "commentVisible": false}
      properties:
        id:
          type: string
          description: "id заказа"
        altUnitsVisible:
          type: boolean
          description: "Показывать ли в заказе колонки дополнительные параметры"
        linearMeterRounded:
          type: string
          description: "Способ округления погонных метров: Не округлять (none), Арифметически (normal), В большую сторону(ceil), В меньшую сторону (floor)"
          enum:
            - none
            - normal
            - ceil
            - floor
        squareMeterRounded:
          type: string
          description: "Способ округления квадратных метров: Не округлять (none), Арифметически (normal), В большую сторону(ceil), В меньшую сторону (floor)"
          enum:
            - none
            - normal
            - ceil
            - floor
        systemVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'Система'"
        commentVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'Комментарий'"
    GetSpecOptionsResponse:
      type: object
      example: {"id": "34de-21abc-12-004", "nomenclature:": true, "count": true, "units": true, "price": true, "altCount": true, "altUnits": true, "altPrice": true, "weight": true, "square": true, "system": true, "comment": true, "taxRate": true, "taxSumm": true, "discountRate": true, "discountSumm": true, "summ": true, "systemGroup": true, "sendEmail": "name@mail.ru", "fileFormat": "xlsx"}
      properties:
        id:
          type: string
          description: "id заказа"
        name:
          type: boolean
          description: "Выгружать номенклатуру в спецификацию"
        count:
          type: boolean
          description: "Выгружать количество в спецификацию"
        units:
          type: boolean
          description: "Выгружать единицы изменения в спецификацию"
        price:
          type: boolean
          description: "Выгружать цену в спецификацию"
        altCount:
          type: boolean
          description: "Выгружать количество доп. единиц в спецификацию"
        altUnits:
          type: boolean
          description: "Выгружать доп. единицы изменения в спецификацию"
        altPrice:
          type: boolean
          description: "Выгружать цену доп. единиц в спецификацию"
        weight:
          type: boolean
          description: "Выгружать вес в спецификацию" 
        square:
          type: boolean
          description: "Выгружать площадь в спецификацию"
        system:
          type: boolean
          description: "Выгружать систему в спецификацию" 
        comment:
          type: boolean
          description: "Выгружать комментарий в спецификацию"
        taxRate:
          type: boolean
          description: "Выгружать ставку НДС в спецификацию"
        taxSumm:
          type: boolean
          description: "Выгружать сумму НДС в спецификацию"
        discountRate:
          type: boolean
          description: "Выгружать процент скидки в спецификацию"
        discountSumm:
          type: boolean
          description: "Выгружать сумму скидки в спецификацию"
        summ:
          type: boolean
          description: "Выгружать общую сумму в спецификацию"
        systemGroup:
          type: boolean
          description: "Группировать по системам"
        sendEmail:
          type: string
          description: "Адрес эл. почты для отправки спецификации"
        fileFormat:
          type: string
          description: "Формат файла спецификации"
          enum:
            - pdf
            - xls
            - xlsx
            - docx
            - ods
    SearchPositions:
      type: object
      example: {"search": "100 200"}
      properties:
        search:
          type: string
          description: "Строка для поиска"
    SearchPositionsResponse:
      type: array
      example: [{"id": "101d-1311-0e0a", "name": "Воздуховод прямоугольный 100х200"}, {"id": "101d-1311-0e0b", "name": "Отвод 100х200"}, {"id": "101d-1311-0e0b", "name": "Зонт вытяжной 100х200"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id найденной позиции"
          name:
            type: string
            description: "Наименование поменклатуры"
    ChangePosition:
      type: object
      example: {"id": "101d-1311-0e0a", "count": 17, "altCount": 15.22, "altUnits": "пог.м", "changeField": "altCount"}
      properties:
        id:
          type: string
          description: "id запрашиваемой позиции"
        count:
          type: number
          description: "Количество в основных единицах"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        changeField:
          type: string
          description: "Поле, которое пользователь изменил при редактировании"
          enum:
            - count
            - altCount
            - altUnits
    ChangePositionResponse:
      type: object
      properties:
        id:
          type: string
          description: "id изделия"
        count:
          type: number
          description: "Количество в основных единицах"
        price:
          type: number
          description: "Цена за основную единицу"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        altPrice:
          type: number
          description: "Цена за дополнительную единицу"
        weight:
          type: number
          description: "Вес, кг"
        square:
          type: number
          description: "Площадь, м2"
        taxRate:
          type: string
          description: "Ставка НДС"
        taxSumm:
          type: number
          description: "Сумма НДС"
        discountRate:
          type: number
          description: "Скидка в %"
        discountSumm:
          type: number
          description: "Сумма скидки"
        summ:
          type: number
          description: "Стоимость позиции"
    SaveOrder:
      type: object
      example: {"id": "34de-21abc-12-004 | 0 (если новый)", "orderDate": "2023-10-18T00:00:00", "customerId": "12c0-1aa3-1411", "manufactorId": "12c0-1aa3-1412", "objectName": "Государственный Эрмитаж", "objectAddress": "СПб, Дворцовая наб., д.38", "wishShipmentDate": "2023-11-28T00:00:00", "realShipmentDate": "2023-12-15T00:00:00", "comment": "Отличный заказ", "positions":[{"id": "15ef-1255-ab13", "count": 17, "altCount": 23.09, "altUnits": "пог.м", "system": "ПВ1, АПВ-3", "comment": "Распрекрасная позиция"}]}
      properties:
        id:
          type: string
          description: "ID заказа"
        orderDate:
          type: string
          description: "Дата заказа"  
        customerId:
          type: string
          description: "Id покупателя"
        manufactorId:
          type: string
          description: "Id производителя"
        objectName:
          type: string
          description: "Наименование объекта"
        objectAddress:
          type: string
          description: "Адрес объекта"
        wishShipmentDate:
          type: string
          description: "Желаемая дата отгрузки"
        realShipmentDate:
          type: string
          description: "Согласованная дата отгрузки"
        comment:
          type: string
          description: "Комментарий к заказу"
        positions:
          type: array
          items:
            $ref: '#/components/schemas/SaveOrderPositionItem'
tags:
  - name: auth
    description: Авторизация/регистрация
  - name: products
    description: Изделия
  - name: profile
    description: Страница профиля
  - name: packs
    description: Страница пакетов расчета
  - name: files
    description: Работа с документами
  - name: orders
    description: Работа с заказами
  - name: order
    description: Работа с заказом
paths:

  # auth part

  /api/auth/login:
    post:
      tags:
        - auth
      summary: "Авторизация по логину и паролю"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/setPassword:
    post:
      tags:
        - auth
      summary: "Установить новый пароль"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPasswordResponse'
  /api/auth/getRegistration:
    post:
      tags:
        - auth
      summary: "Получить на почту ссылку на регистрацию"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegistration'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegistrationResponse'
  /api/auth/getRegEmail:
    post:
      tags:
        - auth
      summary: "Получить данные пользователя по id сессии"
      description: "Отдает почту пользователя, который пытается зарегистрироваться или имя пользователя, если он сбрасывает пароль"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegEmail'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegEmailResponse'
  /Customer/getUser:
    get:
      security:
        - bearerAuth: []
      tags:
        - auth
      summary: "Получить текущего пользователя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
  /api/auth/Recovery:
    post:
      tags:
        - auth
      summary: "Начать процедуру сброса пароля"
      description: "Отправляет на почту пользователя инструкцию. Необходимо указать либо почту, либо логин"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recovery'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryResponse'
  /api/auth/register:
    post:
      tags:
        - auth
      summary: "Завершение регистрации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /api/auth/changemail:
    post:
      tags:
        - auth
      summary: "Подтверждение смены почты"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Changemail'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"

  # products part
              
  /api/config/read:
    get:
      security:
        - basicAuth: []
      tags:
        - products
      summary: "Получить справочник из сервиса расчета"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /api/types?&title=1&bytarget=unf_product_t&input_schema=1:
    get:
      security:
        - basicAuth: []
      tags:
        - products
      summary: "Получить список изделий"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  api/call?&source={currentProduct}&target=unf_product_t:
    post:
      tags:
        - products
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
          description: ID изделия
      summary: "Запросить расчет изделия"
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"

  # profile part
  /Profile/getUserInfo:
    get:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Получить данные профиля текущего пользователя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserInfoResponse'
  /Profile/confirmNewEmail:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Подтверждение новой почты"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmNewEmail'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/sendSms:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Запрос на отправку смс для подтверждения номера телефона"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSms'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/confirmPhone:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Подтверждение номера телефона"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPhone'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/setUserFullname:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Установить ФИО пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserFullname'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/setNewPassword:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Сменить пароль"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNewPassword'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/removeCounterparty:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Удалить контрагента"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCounterparty'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/addCounterparty:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Добавить контрагента"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCounterparty'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCounterpartyResponse'
  /Profile/editCounterparty:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Изменить контрагента"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCounterparty'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/getCounterpartyByINN:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Получить данные о реквизитах контрагента по его ИНН (через сервис dadata)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCounterpartyByINN'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Profile/getBankByBIK:
    post:
      security:
        - bearerAuth: []
      tags:
        - profile
      summary: "Получить данные о реквизитах банка по его БИК"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBankByBIK'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankByBIKResponse'
  # packs part
  /Packs/getInfo:
    get:
      security:
        - bearerAuth: []
      tags:
        - packs
      summary: "Получить данные о пакетах расчета для текущего пользователя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPacksInfo'
  /Packs/getBuySchema:
    get:
      security:
        - bearerAuth: []
      tags:
        - packs
      summary: "Получить данные о вариантах покупки пакетов"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBuySchema'
  /Packs/getBill:
    post:
      security:
        - bearerAuth: []
      tags:
        - packs
      summary: "Получить счет"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPacksBill'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPacksBillResponse'
  /Packs/setAutoActivation:
    post:
      security:
        - bearerAuth: []
      tags:
        - packs
      summary: "Изменить режим автоактивации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAutoActivation'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Packs/setOrder:
    post:
      security:
        - bearerAuth: []
      tags:
        - packs
      summary: "Изменить порядок следования пакетов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPacksOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Packs/activate:
    post:
      security:
        - bearerAuth: []
      tags:
        - packs
      summary: "Ручная активация пакета"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PacksActivate'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  # files part
  /Files/getDocumentById:
    post:
      security:
        - bearerAuth: []
      tags:
        - files
      summary: "Получить документ по id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentById'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentByIdResponse'
  # order list part
  /Orders/getList:
    post:
      security:
        - bearerAuth: []
      tags:
        - orders
      summary: "Получить список заказов текущего пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrderList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderListResponse'
  /Orders/create:
    post:
      security:
        - bearerAuth: []
      tags:
        - orders
      summary: "Создать заказ на основе другого заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
  /Order/getOrder:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Получение данных для карточки заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
  /Order/getCustomers:
    get:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Получить список возможных покупателей (для случая, когда пользователь - это производитель)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomersSchema'
  /Order/getManufactors:
    get:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Получить список возможных производителей"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManufactorsSchema'
  /Order/getOptions:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Получение дополнительных настроек для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOptionsResponse'
  /Order/getSpecOptions:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Получение настроек выгрузки спецификации для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpecOptionsResponse'
  /Order/recalc:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Пересчитать все неактуальные позиции заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Order/searchPositions:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Найти соответствие позиций вводимому запросу"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPositions'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPositionsResponse'
  /Order/changePosition:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Запрос позиции на изменение"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePosition'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePositionResponse'
  /Order/save:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Сохранение заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Order/makeOrder:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Выполнить заказ"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Order/saveOptions:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Сохранить дополнительные настройки для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOptionsResponse'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /Order/saveSpecOptions:
    post:
      security:
        - bearerAuth: []
      tags:
        - order
      summary: "Сохранить настройки выгрузки спецификации для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSpecOptionsResponse'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"