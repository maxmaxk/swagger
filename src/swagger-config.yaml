openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Swagger For IVI web application"
  description: "IVI API Interface"
servers:
  - url: "https://test.zakaz-ivi.online:47001"
    description: "IVI API Server"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: ibsession
  security:
    - bearerAuth: [] 

  # schemas part

  schemas:
    Auth:
      type: object
      properties:
        login:
          type: string
          example: "login"
        password:
          type: string
          example: "password"
    AuthResponse:
      type: object
      properties:
        buildInfo:
          type: string
          example: ""
        refreshTokenExpiration:
          type: string
          example: "2023-10-18T11:54:35"
        token:
          type: string
          example: "ew0KImFsZyI6ICJIUzI1NiIsDQoidHlwIjogIkpXVCINCn0..."
    NewPassword:
      type: object
      properties:
        id:
          type: string
          description: user id
          example: "id"
        password:
          type: string
          example: "password"
    NewPasswordResponse:
      type: object
      properties:
        buildInfo:
          type: string
          example: ""
        refreshTokenExpiration:
          type: string
          example: "2023-10-18T11:54:35"
        token:
          type: string
          example: "ew0KImFsZyI6ICJIUzI1NiIsDQoidHlwIjogIkpXVCINCn0..."
    RegisterResponse:
      type: object
      properties:
        buildInfo:
          type: string
          example: ""
        refreshTokenExpiration:
          type: string
          example: "2023-10-18T11:54:35"
        token:
          type: string
          example: "ew0KImFsZyI6ICJIUzI1NiIsDQoidHlwIjogIkpXVCINCn0..."    
    GetRegistration:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
          description: "Почта для регистрации пользователя"
    GetRegistrationResponse:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
        id:
          type: string
          example: "id"
    GetRegEmail:
      type: object
      properties:
        id:
          type: string
          example: "id"
    GetUserResponse:
      type: object
      properties:
        userName:
          type: string
          example: "userName"
    GetRegEmailResponse:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
        userName?:
          type: string
          example: "userName"
    Recovery:
      type: object
      properties:
        email:
          type: string
          example: "email@mail.com"
        userName:
          type: string
          example: "user"
    RecoveryResponse:
      type: object
      properties:
        OK:
          type: boolean
          example: true
    Register:
      type: object
      properties:
        id:
          type: string
          example: "id"
        login:
          type: string
          example: "user"
        password:
          type: string
          example: "password"
        customerType:
          type: string
          example: "ФЛ"
          description: "Юридическая форма заказчика"
          enum:
            - ФЛ
            - ИП
            - ЮЛ
    Checklogin:
      type: object
      properties:
        login:
          type: string
          description: "Логин для проверки"
          example: "user"
    GetUserInfoResponse:
      type: object
      properties:
        userName:
          type: string
          example: "userName"
        customerType:
          type: string
          example: "ФЛ"
          description: "Юридическая форма заказчика"
          enum:
            - ФЛ
            - ИП
            - ЮЛ
        customerRole:
          type: string
          example: "buyer"
          description: "Роль пользователя: покупатель (buyer), производитель (manufactor), поставщик (vendor)"
          enum:
            - buyer
            - manufactor
            - vendor
        inModeration:
          type: string
          example: "2025-01-30T20:53:32"
          description: "Время подачи заявки на изменение роли, либо пустая строка, если заявки нет / заявка исполнена"
        proxyStatus:
          type: string
          example: "none"
          description: "Статус проверки доверенности: нет(none), на проверке (checking), есть (good)"
          enum:
            - none
            - checking
            - good
        canHelpEdit:
          type: boolean
          example: false
          description: "true, если у пользователя есть права на внесения изменений в документацию хелпа"
        email:
          type: string
          example: "user@mail.com"
        phone:
          type: string
          example: "+7 905 703-44-03"  
        surname:
          type: string
          example: "Вельяминов-Зернов"
          description: "Фамилия"
        name:
          type: string
          example: "Мухаммад-Юсуф"
          description: "Имя"
        secondName:
          type: string
          example: "Александрович"
          description: "Отчество"
        counterparties:
          type: array
          items:
            $ref: '#/components/schemas/Counterparty'
        tokenCountWarningLimit:
          type: number
          example: 30
          description: "Лимит предупреждения окончания подписки (по остатку токенов)" 
        tokenDaysWarningLimit:
          type: number
          example: 3
          description: "Лимит предупреждения окончания подписки (дней осталось)"     
    Counterparty:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
        companyName:
          type: string
          example: "МясГазСтрой"
          description: "Название организации"
        INN:
          type: string
          example: "7810348720"
          description: "ИНН"
        KPP:
          type: string
          example: "000000000"
          description: "КПП"
        OKPO:
          type: string
          example: "000000000"
          description: "ОКПО"
        lawAddress:
          type: string
          example: "СПб, Антоновская ул., д. 14, офис 58"
          description: "Юридический адрес" 
        factAddress:
          type: string
          example: "СПб, пр. Маршала Жукова, д. 27, офис 629"
          description: "Фактический адрес"
        BIK:
          type: string
          example: "000000000"
          description: "БИК банка"
        bankName:
          type: string
          example: "АКБ Абсолют Банк (ПАО)"
          description: "Название банка"        
        corrBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Корреспондентский счет"
        privateBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Расчетный счет"
        phone:
          type: string
          example: "+7 (812) 747-65-93"
          description: "Телефон организации"
        owner:
          type: boolean
          example: false
          description: "Запретить удалять контрагента"
    ConfirmNewEmail:
      type: object
      properties:
        email:
          type: string
          example: "newmail@mail.com"
    SendSms:
      type: object
      properties:
        phone:
          type: string
          example: "+7 905 703-44-03"
    ConfirmPhone:
      type: object
      properties:
        smsCode:
          type: string
          example: "11111"
    SetUserFullname:
      type: object
      properties:
        name:
          type: string
          example: "Мухаммад-Юсуф"
          description: "Имя"
        surname:
          type: string
          example: "Вельяминов-Зернов" 
          description: "Фамилия"
        secondName:
          type: string
          example: "Александрович"
          description: "Отчество"
    SetNewPassword:
      type: object
      properties:
        oldPassword:
          type: string
          example: "oldPassword"
          description: "Старый пароль"
        newPassword:
          type: string
          example: "newPassword" 
          description: "Новый пароль"   
    SetTokenWarningLimits:
      type: object
      properties:
        tokenCountWarningLimit:
          type: number
          example: 40
          description: "Лимит предупреждения окончания подписки (по остатку токенов)"
        tokenDaysWarningLimit:
          type: number
          example: 5
          description: "Лимит предупреждения окончания подписки (дней осталось)"   
    RemoveCounterparty:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
    AddCounterparty:
      type: object
      properties:
        companyName:
          type: string
          example: "МясГазСтрой"
          description: "Название организации"
        INN:
          type: string
          example: "7810348720"
          description: "ИНН"
        KPP:
          type: string
          example: "000000000"
          description: "КПП"
        OKPO:
          type: string
          example: "000000000"
          description: "ОКПО"
        lawAddress:
          type: string
          example: "СПб, Антоновская ул., д. 14, офис 58"
          description: "Юридический адрес" 
        factAddress:
          type: string
          example: "СПб, пр. Маршала Жукова, д. 27, офис 629"
          description: "Фактический адрес"
        BIK:
          type: string
          example: "000000000"
          description: "БИК банка"
        privateBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Расчетный счет"
        phone:
          type: string
          example: "+7 (812) 747-65-93"
          description: "Телефон организации"
    AddCounterpartyResponse:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
    EditCounterparty:
      type: object
      properties:
        id:
          type: string
          example: "131a-23bc2213-12aa-00ff"
          description: "Уникальный идентификатор организации"
        companyName:
          type: string
          example: "МясГазСтрой"
          description: "Название организации"
        INN:
          type: string
          example: "7810348720"
          description: "ИНН"
        KPP:
          type: string
          example: "000000000"
          description: "КПП"
        OKPO:
          type: string
          example: "000000000"
          description: "ОКПО"
        lawAddress:
          type: string
          example: "СПб, Антоновская ул., д. 14, офис 58"
          description: "Юридический адрес" 
        factAddress:
          type: string
          example: "СПб, пр. Маршала Жукова, д. 27, офис 629"
          description: "Фактический адрес"
        BIK:
          type: string
          example: "000000000"
          description: "БИК банка"       
        privateBankAccount:
          type: string
          example: "40802810000000000000"
          description: "Расчетный счет"
        phone:
          type: string
          example: "+7 (812) 747-65-93"
          description: "Телефон организации"
    GetCounterpartyByINN:
      type: object
      properties:
        INN:
          type: string
          example: "7810348720"
          description: "ИНН организации"
    GetBankByBIK:
      type: object
      properties:
        BIK:
          type: string
          example: "044030653"
          description: "БИК банка"
    GetBankByBIKResponse:
      type: object
      properties:
        bankName:
          type: string
          example: "ПАО СБЕРБАНК"
          description: "Название банка"
        corrAccount:
          type: string
          example: "30101810500000000653"
          description: "Корреспондентский счет"
    ChangeToManufactor:
      type: object
      properties:
        shortName:
          type: string
          example: "Вентустановки"
          description: "Короткое название производителя"
    ChangeToVendor:
      type: object
      properties:
        canSellToPhysical:
          type: boolean
          example: true
          description: "Разрешены продажи физическим лицам"
        billTerm:
          type: number
          example: 1
          description: "Срок выставления счёта (дни)"
        payTerm:
          type: number
          example: 1
          description: "Срок оплаты счёта (дни)"
        deliveryTerm:
          type: number
          example: 1
          description: "Срок поставки (минимальный, дни)"
        loadAddress:
          type: string
          example: "Санкт-Петербург, Пушкин, ул. Ахматовская, д. 21"
          description: "Адрес производства"
        loadCoordinates:
          type: string
          example: "30.422031, 59.726483"
          description: "Координаты погрузки"
        selfDelivery:
          type: boolean
          example: true
          description: "Разрешен самовывоз"
        vendorDelivery:
          type: boolean
          example: true
          description: "Разрешена доставка поставщиком"
        deliveryRegions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "011-ef15-001"
                description: "id региона доставки"
    EditVendor:
      type: object
      properties:
        canSellToPhysical:
          type: boolean
          example: true
          description: "Разрешены продажи физическим лицам"
        billTerm:
          type: number
          example: 1
          description: "Срок выставления счёта (дни)"
        payTerm:
          type: number
          example: 1
          description: "Срок оплаты счёта (дни)"
        deliveryTerm:
          type: number
          example: 1
          description: "Срок поставки (минимальный, дни)"
        loadAddress:
          type: string
          example: "Санкт-Петербург, Пушкин, ул. Ахматовская, д. 21"
          description: "Адрес производства"
        loadCoordinates:
          type: string
          example: "30.422031, 59.726483"
          description: "Координаты погрузки"
        website:
          type: string
          example: "name-site.com"
          description: "Сайт поставщика"
        logo:
          type: string
          example: "121-ab0-32312-00ff"
          description: "id документа изображения логотипа поставщика"  
        selfDelivery:
          type: boolean
          example: true
          description: "Разрешен самовывоз"
        vendorDelivery:
          type: boolean
          example: true
          description: "Разрешена доставка поставщиком"
        deliveryRegions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "011-ef15-001"
                description: "id региона доставки"    
    GetCityList:
      type: object
      properties:
        search:
          type: string
          example: "Александ"
          description: "Строка поиска населенного пункта (поиск начинает работать при длине строки поиска >= 3)"
    GetCityListResponse:
      type: array
      example: [{"id": "0011-ef15-0001", "name": "Александровка — село в Майминском районе респ. Алтай"}, {"id": "0011-ef15-0002", "name": "Александровка — посёлок в Благовещенском районе респ. Алтай"}, {"id": "0011-ef15-0003", "name": "Александровка — село в Завьяловском районе респ. Алтай"}, {"id": "0011-ef15-0004", "name": "А всего Александровок в России 329 штук по версии Википедии, а сколько в 1С?"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id населенного пункта"
          name:
            type: string
            description: "Наименование населенного пункта"
    GetRegionListResponse:
      type: array
      example: [{"id": "0011-ef15-0001", "name": "Вся Россия"}, {"id": "0011-ef15-0002", "name": "Москва"}, {"id": "0011-ef15-0003", "name": "Московская обл."}, {"id": "0011-ef15-0004", "name": "СПб"}, {"id": "0011-ef15-0005", "name": "Ленинградская обл."}, {"id": "0011-ef15-0006", "name": "Адыгея"}, {"id": "0011-ef15-0007", "name": "Алтай"}, {"id": "0011-ef15-0008", "name": "Башкортостан"}, {"id": "0011-ef15-0009", "name": "Бурятия"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id региона"
          name:
            type: string
            description: "Наименование региона"
    SetProxyId:
      type: object
      properties:
        id:
          type: string
          example: "121-ab0-32312-00ff"
          description: "id загруженного документа доверенности"
    SetLogoId:
      type: object
      properties:
        id:
          type: string
          example: "121-ab0-32312-00ff.png"
          description: "id загруженного документа логотипа"   
    SetLogoIdResponse:
      type: object
      properties:
        id:
          type: string
          example: "121-ab0-32312-1100"
          description: "id для скачивания логотипа"      
    GetManufactorInfoResponse:
      type: object
      properties:
        configPrefix:
          type: string
          description: "Префикс конфигурации производителя"
          example: "prefix"
        shortName:
          type: string
          description: "Краткое наименование производителя"
          example: "Трубное решение"
    GetVendorInfo:
      type: object
      properties:
        configPrefix:
          type: string
          description: "Префикс конфигурации производителя"
          example: "prefix"
        shortName:
          type: string
          description: "Краткое наименование производителя"
          example: "Трубное решение"
        canSellToPhysical:
          type: boolean
          example: true
          description: "Разрешены продажи физическим лицам"
        billTerm:
          type: number
          example: 1
          description: "Срок выставления счёта (дни)"
        payTerm:
          type: number
          example: 1
          description: "Срок оплаты счёта (дни)"
        deliveryTerm:
          type: number
          example: 1
          description: "Срок поставки (минимальный, дни)"
        loadAddress:
          type: string
          example: "Санкт-Петербург, Пушкин, ул. Ахматовская, д. 21"
          description: "Адрес производства"
        loadCoordinates:
          type: string
          example: "30.422031, 59.726483"
          description: "Координаты погрузки"
        website:
          type: string
          example: "name-site.com"
          description: "Сайт поставщика"
        logo:
          type: string
          example: "121-ab0-32312-00ff"
          description: "id документа изображения логотипа поставщика"          
        selfDelivery:
          type: boolean
          example: true
          description: "Разрешен самовывоз"
        vendorDelivery:
          type: boolean
          example: true
          description: "Разрешена доставка поставщиком"
        deliveryRegions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "011-ef15-001"
                description: "id региона доставки"
    AddAgreementEvent:
      type: object
      properties:
        email:
          type: string
          description: "Электронная почта пользователя"
          example: "user@mail.ru"
        eventId:
          type: string
          description: "Тип соглашения юзера: userAgreement(пользовательское соглашение), processPolicy(политика обработки данных), priceAgreement(прейскурант сервисов)"
          example: "userAgreement"
          enum:
            - userAgreement
            - processPolicy
            - priceAgreement
    Changemail:
      type: object
      properties:
        id:
          type: string
          example: "121-ab0-32312-00ff"
          description: "id сессии"
    GetPacksInfo:
      type: object
      properties:
        availCalcs:
          type: number
          example: 59264
          description: "Доступно всего расчетов"
        agreement:
          type: boolean
          example: false
          description: "Статус соглашнения с тарифами и правилами расчетов"
        packs:
          type: array
          description: "Массив пакетов"
          items:
            $ref: '#/components/schemas/PacksItem'
        total:
          type: object
          description: "Итоговые данные по пакетам"
          properties:
            packsCount:
              type: number
              example: 21
              description: "Всего пакетов"
            calcsCount:
              type: number
              example: 4300
              description: "Всего расчетов"
            calcsTransfer:
              type: number
              example: 2500
              description: "Всего расчетов перенесено"              
            calcSum:
              type: number
              example: 12000
              description: "Стоимость всех пакетов"
            calcsUsed:
              type: number
              example: 2948
              description: "Всего использовано расчетов"
            calcsLeft:
              type: number
              example: 1352
              description: "Всего расчетов осталось"
    GetBuySchema:
      type: object
      example: {period: 30, buySchema: [{packCount: 100, price: 8}, {packCount: 500, price: 6}, {packCount: 1000, price: 4.5}, {packCount: 5000, price: 3.5}]}
      properties:
        period:
          type: number
          description: "Период действия пакетов"
        buySchema:
          type: array
          description: "Тарифная сетка цены тикета в зависимости от кол-ва: packCount - порог изменения цены: поле price справедливо для кол-ва меньше либо равного, указанного в packCount"
          items:
            type: object
            properties:
              packCount: 
                type: number
                description: "Порог изменения цены"
              price: 
                type: number
                description: "Цена тикета для кол-ва <= порогу packCount"
    PacksItem:
      type: object
      properties:
        id:
          type: string
          example: "000 000 000 000 000 153"
          description: "id пакета"
        order:
          type: number
          example: 1
          description: "Порядок расположения неиспользованных / неполностью использованных пакетов, для остальных -1"
        activateStatus:
          type: string
          example: "active"
          description: "Статус активации пакета: активен(active), неактивен(notActive), использован(used)"
          enum:
            - active
            - notActive
            - used
        calcsCount:
          type: number
          example: 100
          description: "Количество расчетов в пакете"
        calcsTransfer:
          type: number
          example: 25
          description: "Расчетов перенесено с предыдущего пакета"   
        calcsPeriod:
          type: number
          example: 90
          description: "Количество дней для расчетов в пакете"
        calcPrice:
          type: number
          example: 10
          description: "Цена одного расчета"
        calcSum:
          type: number
          example: 1000
          description: "Стоимость пакета"
        paymentDate:
          type: string
          example: "04.12.2023"
          description: "Дата оплаты" 
        calcsUsed:
          type: number
          example: 68
          description: "Расчетов использовано"
        calcsLeft:
          type: number
          example: 32
          description: "Расчетов осталось"
        activateDate:
          type: string
          example: "07.12.2023"
          description: "Дата активации пакета"
        endDate:
          type: string
          example: "06.03.2024"
          description: "Дата окончания действия пакета"
    GetPacksBill:
      type: object
      properties:
        packCountBuy:
          type: number
          example: 300
          description: "Расчетов в заказе"
        payment_method_data:
          type: string
          example: "sbp"
          description: "Способ расчетов: По счету(bill), Система быстрых платежей(sbp), Банковская карта (bank_card), SberPay(sberbank), ЮMoney(yoo_money)"
          enum:
            - bill
            - sbp
            - bank_card
            - sberbank
            - yoo_money
    GetPacksBillResponse:
      type: object
      properties:
        documentId:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id документа счета для скачивания"
    RefusePackById:
      type: object
      properties:
        id:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id пакета для отзыва"    
    SbpMakeBillResponse:
      type: object
      properties:
        billId:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id счета, возвращенного платежной системой"
        qrUrl:
          type: string
          example: "https://qr.nspk.ru/QR_ID"
          description: "Ссылка на QR-код для выполнения оплаты"
    SbpGetBillState:
      type: object
      properties:
        billId:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id платежа СБП"
    SbpGetBillStateResponse:
      type: object
      properties:
        billState:
          type: string
          example: "pending"
          description: "Статус платежа: Ожидает оплаты (pending), Успешно совершен (succeeded), Отменен (canceled), Не найден (notFound)"
          enum:
            - pending
            - succeeded
            - canceled
            - notFound
        description:
          type: string
          example: "Заказ №НФНФ-000147"
          description: "Наименование заказа"
        amount:
          type: number
          example: 2700.00
          description: "Сумма заказа"
        payment:
          type: string
          example: "bank_card"
          description: "Форма оплаты: СБП (sbp), Банковская карта (bank_card), СберPay (sberbank), ЮMoney (yoo_money)"
          enum:
            - sbp
            - bank_card
            - sberbank
            - yoo_money    
        url:
          type: string
          example: "https://yoomoney.ru/checkout/payments/v2/contract?orderId=2ecff0e8-000f-5000-8000-1e7eb1ab77d1"
          description: "Ссылка на оплату"    
    SbpBillStateWebhook:
      type: object
      properties:
        id:
          type: string
          example: "e44e8088-bd73-43b1-959a-954f3a7d0c54"
          description: "id платежа"
        event:
          type: string
          example: "payment.succeeded"
          description: "Название события"
        url:
          type: string
          example: "https://www.example.com/notification_url"
          description: "URL, на который отправляются уведомления"
    GetDocumentById:
      type: object
      properties:
        id:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id документа для скачивания"
    GetDocumentByIdResponse:
      type: file
    GetUserAgreementResponse:
      type: file
    GetContactsResponse:
      type: object
      properties:
        phone:
          type: string
          description: "Телефон организации"
          example: "+7 (905) 787-46-23"
        eMail:
          type: string
          description: "Электронная почта организации"
          example: "help@zakaz-ivi.online"
        address:
          type: string
          description: "Почтовый адрес"
          example: "188640, Ленинградская область, Всеволожский муниципальный район, город Всеволожск, улица Александровская, дом 80, помещение 16."
        name:
          type: string
          description: "Наименование организации"
          example: "ООО «17 Бит»"
        INN:
          type: string
          description: "ИНН"
          example: "4706079514"
        OGRN:
          type: string
          description: "ОГРН"
          example: "1244700021631"
        privateBankAccount:
          type: string
          description: "Расчётный счёт"
          example: "40702810228610002690" 
        bankName:
          type: string
          description: "Название банка"
          example: "Филиал «Центральный» банка ВТБ (ПАО)"
        BIK:
          type: string
          description: "БИК банка"
          example: "044525411"
        corrBankAccount:
          type: string
          description: "Корреспондентский счет"
          example: "30101810145250000411"                       
    FileUploadResponse:
      type: object
      properties:
        id:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id файла"
    HelpSaveHelpById:
      type: object
      properties:
        id:
          type: string
          example: "4602259e-56fe-4614-affb-f6e8c7ed573f"
          description: "id документа для сохранения"
        title:
          type: string
          example: "Пользовательское соглашение"
          description: "Наименование документа для сохранения"
        content:
          type: file
          example: "**ПОЛЬЗОВАТЕЛЬСКОЕ СОГЛАШЕНИЕ** Настоящее пользовательское соглашение рег..."
          description: "Содержимое документа"
    SetPacksOrder:
      type: array
      example: [{"id": "000 000 000 000 000 153", "order": 0}, {"id": "000 000 000 000 000 158", "order": 1}]
      items:
        type: object
        properties:
          id:
            type: string
            example: "000 000 000 000 000 153"
            description: "id пакета"
          order:
            type: number
            example: 1
            description: "Порядок расположения"
    GetOrderList:
      type: object
      example: {"orderBy": "objectNameInc", "filters": [{"fieldName": "orderDate", "searchFilter": "12.04.1961"}, {"fieldName": "comment", "searchFilter": "УрЮрВКос!"}, {"fieldName": "stateName", "searchFilter": "Открыт"}]}
      properties:
        orderBy:
          type: string
          description: "Задание сортировки: имя поля + Inc/Dec на конце"
          default: none
          enum:
            - none
            - objectNameInc
            - orderDateInc
            - shipmentDateInc
            - commentInc
            - summInc
            - orderStatusInc
            - paymentStatusInc
            - shipmentStatusInc
            - objectNameDec
            - orderDateDec
            - shipmentDateDec
            - commentDec
            - summDec
            - orderStatusDec
            - paymentStatusDec
            - shipmentStatusDec
        filters:
          type: array
          description: "Массив фильтров по полям"
          items:
            type: object
            properties:
              fieldName:
                type: string
                description: "Имя поля"
                enum:
                  - objectName
                  - orderDateFrom
                  - orderDateTo
                  - manufactorName
                  - shipmentDate
                  - comment
                  - summ
                  - stateName
              searchFilter:
                type: string
                description: "Строка фильтрации"
    GetOrderListResponse:
      type: array
      example: [{"id": "34de-21abc-12-00e",	"objectName": "Эрмитаж", "objectAddress":"СПБ, Дворцовая наб., д.38", "orderName":"35724/22-17", "manufactorName": "ООО Вентретейл", "customerName": "ИП Джанушвили", "orderDate": "2023-10-01T00:00:00", "shipmentDate":"2023-10-21T00:00:00", "comment":"Лучший заказ в моей жизни", "summ":27340, "orderStatus":"ordered", "paymentStatus":"partpay", "shipmentStatus":"partoverdue", "isDraft": false}]
      items:
        $ref: '#/components/schemas/OrderItem'
    OrderItem:
      type: object
      properties:
        id:
          type: string
          description: "ID заказа"
        objectName:
          type: string
          description: "Название объекта"
        objectAddress:
          type: string
          description: "Адрес объекта"        
        orderName:
          type: string
          description: "Номер заказа"
        manufactorName:
          type: string
          description: "Имя поставщика"
        customerName:
          type: string
          description: "Имя покупателя"
        orderDate:
          type: string
          description: "Дата заказа"
        shipmentDate:
          type: string
          description: "Дата отгрузки"
        comment:
          type: string
          description: "Комментарий к заказу"
        summ:
          type: number
          description: "Сумма заказа"
        orderStatus:
          type: string
          description: "Статус заказа: Новый(new), Заказано(ordered), Размещён(publish), В работе(inwork), Завершён(done), Отменён(cancel)"
          enum:
            - new
            - ordered
            - publish
            - inwork
            - done
            - cancel
        paymentStatus:
          type: string
          description: "Статус оплаты: Не оплачен(none), Частично оплачен(partpay), Просрочен(overdue), Оплачен(paid)"
          enum:
            - none
            - partpay
            - overdue
            - paid
        shipmentStatus:
          type: string
          description: "Статус отгрузки: Не отгружен(none), Отгружен частично(partshipment), Частично отгружен/просрочен(partoverdue), Просрочен(overdue), Отгружен(done)"
          enum:
            - none
            - partshipment
            - partoverdue
            - overdue
            - done
        isDraft:
          type: boolean
          description: "true, если заказ в стадии распознавания спецификации"
    GetOrderStates:
      type: array
      example: [{"id": "34de-21abc-12-001",	"stateName": "Новый", "isDefault": false}, {"id": "34de-21abc-12-002",	"stateName": "Открыт", "isDefault": true}, {"id": "34de-21abc-12-002",	"stateName": "Актуальные", "isDefault": false}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id статуса заказа, либо значение 'split' для отображения разделителя"
          stateName:
            type: string
            description: "Наименование статуса заказа"
          isDefault:
            type: boolean
            description: "Является ли опция значением по умолчанию"
    StatisticGetInfo:
      type: object
      properties:
        orderCount:
          type: number
          description: "Количество заказов, требующих внимания"
          example: 24
        newsCount:
            type: number
            description: "Количество непрочитанных новостей"
            example: 16
        subscribe:
          type: string
          description: "Статус подписки: notActive - нет/закончилась, active - есть подписка, ending - заканчивается (10% от первоначального количества или 3 рабочих дня до окончания срока действия)"
          example: "notActive"
          enum:
            - notActive
            - active
            - ending
    DownloadsGetList:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: "00cd-0011-5aff-0001"
            description: "id для загрузки документа"
          dateTime:
            type: string
            example: "02.05.2024T09:57:00"
            description: "Дата, время"
          fileName:
            type: string
            example: "1cv8c_17bit.exe"
            description: "Имя файла"
          version:
            type: string
            example: "8.03.5609"
            description: "Версия файла"
          size:
            type: number
            example: 584.27
            description: "Размер в КВ"
          md5:
            type: string
            example: "026f8e459c8f89ef75fa7a78265a0025"
            description: "Хеш-код (MD5)"
          note:
            type: string
            example: "Краткая заметка по файлу."
            description: "Пояснение к файлу"
    NewsGetList:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: "00cd-0011-5aff-0001"
            description: "id новости"      
          dateTime:
            type: string
            example: "02.05.2024T09:57:00"
            description: "Дата, время"
          read:
            type: boolean
            example: false
            description: "Флаг прочтения новости"
          message:
            type: string
            example: "**Наш сайт** находится в сети Интернет по адресу: [www.zakaz-ivi.online](https://www.zakaz-ivi.online)"
            description: "Текст новости в формате md"
    NewsSetReadFlag:
      type: object
      properties:
        flag:
          type: boolean
          example: true
          description: "Установить или снять флаг прочтения новостей"
        ids:
          type: array
          items:
            type: string
            example: "00cd-0011-5aff-0001"
            description: "id новости"
    GetPaymentsList:
      type: object
      properties:
        dateFrom:
          type: string
          example: "2024-12-01"
          description: "Фильтр начала периода"
        dateTo:
          type: string
          example: "2024-12-31"
          description: "Фильтр окончания периода"
    GetPaymentsListResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: "34de-21abc-12-001"
            description: "id платежа"
          date:
            type: string
            example: "2024-12-01"
            description: "Дата платежа"
          name:
            type: string
            example: "Подписка на платные сервисы сайта zakaz-ivi.online на 30 дней"
            description: "Наименование платежа"
          billState:
            type: string
            example: "pending"
            description: "Статус платежа: Ожидает оплаты (pending), Успешно совершен (succeeded), Отменен (canceled)"
            enum:
              - pending
              - succeeded
              - canceled
          payment:
            type: string
            example: "bank_card"
            description: "Форма оплаты: СБП (sbp), Банковская карта (bank_card), СберPay (sberbank), ЮMoney (yoo_money), По счету (bill)"
            enum:
              - sbp
              - bank_card
              - sberbank
              - yoo_money
              - bill
          amount:
            type: number
            example: 2700.00
            description: "Сумма заказа"
    GetDemoLastMessages:
      type: object
      properties:
        sessionId:
          type: string
          example: "0101-ef15-0018"
          description: "id сессии для чата с неавторизованным пользователем, генерируется фронтом, хранится в localstorage"
    GetMessagesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: "0101-ef15-0018"
            description: "id сообщения в чате"
          datetime:
            type: string
            example: "2025-05-31T15:18:44"
            description: "Время сообщения"
          message:
            type: string
            example: "Как тут что делать?"
            description: "Текст сообщения"
          side:
            type: string
            example: "user"
            description: "Автор сообщения: user - вопрос пользователя, service - ответ сервиса"
            enum:
              - user
              - service
    PostDemoMessage:
      type: object
      properties:
        sessionId:
          type: string
          example: "0101-ef15-0018"
          description: "id сессии для чата с неавторизованным пользователем, генерируется фронтом, хранится в localstorage"
        message:
          type: string
          example: "Как тут что делать?"
          description: "Текст сообщения"
        side:
          type: string
          example: "user"
          description: "Автор сообщения: user - вопрос пользователя, service - ответ сервиса"
          enum:
            - user
            - service
    PostMessage:
      type: object
      properties:
        message:
          type: string
          example: "Как тут что делать?"
          description: "Текст сообщения"
        side:
          type: string
          example: "user"
          description: "Автор сообщения: user - вопрос пользователя, service - ответ сервиса"
          enum:
            - user
            - service
    CreateNewOrder:
      type: object
      description: "id заказа, позициями которого нужно наполнить новый заказ"
      example: {"id": "34de-21abc-12-001"}
      properties:
        id:
          type: string
          description: "id заказа на основе которого нужно создать новый"
    GetOrder:
      type: object
      example: {"id":"34de-21abc-12-004"}
      description: "id заказа"
      properties:
        id:
          type: string
    GetDeliveryWays:
      type: object
      example: {"id":"34de-21abc-12-004"}
      description: "id производителя"
      properties:
        id:
          type: string
    CompareVendors:
      type: object
      properties:
        orderId:
          type: string
          description: "id заказа"
          example: "0101-ef15-0011"
        vendorId:
          type: string
          description: "id поставщика"
          example: "0101-ef15-0022"
    CompareVendorsResponse:
      type: object
      properties:
        vendorInfo:
          type: object
          properties:
            id:
              type: string
              example: "0101-ef15-0001"
              description: "id поставщика"
            summ:
              type: number
              example: 26394867
              description: "Пересчитанная сумма заказа"
            planDelivery:
              type: string
              example: "17.06.2024"
              description: "Расчетная дата поставки"
            compareStatus:
              type: string
              example: "less"
              description: "Статус результата пересчета заказа: less - сумма меньше, чем в исходном Заказе, equal - сумма равна исходному Заказу, more - сумма больше, чем в исходном Заказе, lack - нет расчёта по некоторым позициям"
              enum:
                - less
                - equal
                - more
                - lack
            comment:
              type: string
              example: "(исходный Заказ)"
              description: "Комментарий поставщика"
        positions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "0101-ef15-0018"
                description: "id позиции"
              name:
                type: string
                example: "Отвод х/к ст. 1.2мм, сварн., 700х400"
                description: "Наименование позиции"
              count:
                type: number
                example: 17
                description: "Количество в заказе"
              unit:
                type: string
                example: "шт"
                description: "Единицы измерения" 
              price:
                type: number
                example: 623
                description: "Исходная цена позиции"             
              summ:
                type: number
                example: 10591
                description: "Исходная сумма позиции"
              vendorPosition:
                type: object
                properties:  
                  price:
                    type: number
                    example: 623
                    description: "Пересчитанная цена позиции"             
                  summ:
                    type: number
                    example: 10591
                    description: "Пересчитанная сумма позиции"
                  compareStatus:
                    type: string
                    example: "equal"
                    description: "Статус результата пересчета позиции: less - сумма меньше, чем в исходном Заказе, equal - сумма равна позиции в исходном Заказе, more - сумма больше, чем в исходном Заказе, lack - нет расчёта по этой позиции"
                    enum:
                      - less
                      - equal
                      - more
                      - lack
    CreateByVendors:
      type: object
      example: {"orderId": "34de-21abc-12-001", "vendorIds": ["34de-21abc-12-002", "34de-21abc-12-003", "34de-21abc-12-004"]}
      properties:
        orderId:
          type: string
          example: "34de-21abc-12-005"
          description: "id заказа"
        vendorIds:
          type: array 
          items:
            type: string
            example: "34de-21abc-12-005"
            description: "id поставщика для создания заказа"
    CreateByVendorsResponse:
      type: array
      example: ["34de-21abc-12-00a", "34de-21abc-12-00b", "34de-21abc-12-00c"]
      items:
        type: string
        description: "id новых заказов"
    OrderSetState:
      type: object
      properties:
        orderId:
          type: string
          example: "34de-21abc-12-005"
          description: "id заказа"
        newState:
          type: string
          example: "На согласовании"
          description: "Новый статус заказа"   
          enum:
            - 'Новый'
            - 'Открыт'
            - 'На согласовании'
            - 'К оплате'
            - 'В работе'
            - 'Отгружен'
            - 'Просрочен'
            - 'Завершен'
            - 'Отменен' 
    RemoveFile:
      type: object
      example: {"fileId": "34de-21abc-12-005"}
      properties:
        fileId:
          type: string
          description: "id файла"
    OrderPutFile:
      type: object
      example: {"orderId":"34de-21abc-12-004", "fileId": "34de-21abc-12-005", "fileName": "Спецификация.pdf"}
      properties:
        orderId:
          type: string
          description: "id заказа"
        fileId:
          type: string
          description: "id файла"
        fileName:
          type: string
          description: "Имя файла"
    GetOrderResponse:
      type: object
      example: {"id": "34de-21abc-12-004 | 0 (если новый)", "manufacturerId":"34de-21abc-12-005", "manufacturerName": "ООО ПО Трубное Решение", "orderName": "394/270-615", "orderDate": "2023-10-18T00:00:00", "objectName": "Государственный Эрмитаж", "objectAddress": "СПб, Дворцовая наб., д.38", "orderStatus": "new", "customerId":"34de-21abc-12-006", "amIAuthor": true, "customerName": "ИП Джумаев Мухаммади Фуркатович", "wishShipmentDate": "2023-11-28T00:00:00", "realShipmentDate": "2023-12-15T00:00:00", "actualDate": "2023-12-01T00:00:00", "comment": "Отличный заказ", "deliveryWayId": "017-ef11-0011-00af", "loadAddress": "Склад готовой продукции", "cargoWeight": 19.365, "cargoMaxSize": 2150, "cargoVolume": 5.39, "recipient": "Бари Алибасов", "recipientPhone": "+7 911 111 11 11", "deliveryCost": 2197, "deliveryInclude": false, "deliveryComment": "Пусть заказ доставят мулаточки", "positions":[{"id": "15ef-1255-ab13", "isActual": true, "name": "Отвод х/к ст. 1.2мм, сварн., 700х400, 90град, шея1=100, шея2=100, фл25/фл25, грунт красн-кор", "printName": "Отвод  х/к ст. 1.2мм", "count": 17, "units": "шт", "price": 6828, "altCount": 23.09, "altUnits": "пог.м", "altUnitsList": ["пог.м","м2"], "altPrice": 4496, "weight": 361.3, "square": 28.051, "singleWeight": 151.3, "singleSquare": 18.051, "system": "ПВ1, АПВ-3", "comment": "Распрекрасная позиция", "taxRate": "20/120", "taxSumm": 456.2, "discountRate": 10.7, "discountSumm": 1395.3, "summ": 116097}], 'orderOptions': {'altUnitsVisible': true, "linearMeterRounded": "ceil", "squareMeterRounded": "ceil", "printNameVisible": false, "systemVisible": false, "commentVisible": false, "ndsVisible": false, "singleWeightVisible": false, "singleSquareVisible": false}, "orderSpecOptions":{"name": true, "printName": true, "count": true, "units": true, "price": true, "altUnits": true, "weight": true, "square": true, "maxSize": true, "sizeVolume": true, "system": true, "comment": true, "taxRate": true, "taxSumm": true, "discountRate": true, "discountSumm": true, "summ": true, "groupType": "system", "draft": true, "sendEmail": true, "email": "name@mail.ru", "fileFormat": "xlsx"}, "total": {"count": 17, "weight": 361.3, "square": 28.051, "taxSumm": 456.2, "discountAvg": 10.7, "discountSumm": 1395.3, "summ": 116097}}
      properties:
        id:
          type: string
          description: "ID заказа"
        manufacturerId:
          type: string
          description: "Id производителя"
        manufacturerName:
          type: string
          description: "Наименование производителя"
        orderName:
          type: string
          description: "Номер заказа"
        orderDate:
          type: string
          description: "Дата заказа"  
        objectName:
          type: string
          description: "Название объекта"
        objectAddress:
          type: string
          description: "Адрес объекта"   
        orderStatus:
          type: string
          description: "Статус заказа: Новый(new), Заказано(ordered), Размещён(publish), В работе(inwork), Завершён(done), Отменён(cancel)"
          enum:
            - new
            - ordered
            - publish
            - inwork
            - done
            - cancel
        customerId:
          type: string
          description: "Id покупателя"
        amIAuthor:
          type: boolean
          description: "true, если текущий пользователь является автором заказа"
        customerName:
          type: string
          description: "Наименование покупателя"
        wishShipmentDate:
          type: string
          description: "Желаемая дата отгрузки"
        realShipmentDate:
          type: string
          description: "Согласованная дата отгрузки"
        actualDate:
          type: string
          description: "Дата актуальности расчета изделий"
        comment:
          type: string
          description: "Комментарий к заказу"
        deliveryWayId:
          type: string
          description: "id способа доставки (исходя из справочника getDeliveryWays)"
        loadAddress:
          type: string
          description: "Адрес погрузки"
        cargoWeight:
          type: number
          description: "Вес груза, кг"
        cargoMaxSize:
          type: number
          description: "Максимальный габарит, мм"
        cargoVolume:
          type: number
          description: "Объём, м³"
        recipient:
          type: string
          description: "Контактное лицо Получателя"
        recipientPhone:
          type: string
          description: "Контактный телефон Получателя"
        deliveryCost:
          type: number
          description: "Стоимость доставки, ₽"
        deliveryInclude:
          type: boolean
          description: "Включить доставку в стоимость товара"
        deliveryComment:
          type: sting
          description: "Комментарий по доставке"
        positions:
          type: array
          items:
            $ref: '#/components/schemas/OrderPositionItem'
        total:
          type: object
          properties:  
            count:
              type: number
              description: "Количество единиц изделий"
            weight:
              type: number
              description: "Общий вес, кг"
            square:
              type: number
              description: "Общая площадь, м2"
            taxSumm:
              type: number
              description: "Общая сумма НДС"
            discountAvg:
              type: number
              description: "Усредненная по всем позициям скидка"
            discountSumm:
              type: number
              description: "Общая сумма скидки"
            summ:
              type: number
              description: "Сумма заказа"
        orderOptions:
          $ref: '#/components/schemas/GetOptionsResponse'
        specOptions:
          $ref: '#/components/schemas/GetSpecOptionsResponse'
    GetDraftResponse:
      type: object
      properties:
        orderName:
          type: string
          example: "394/270-615"
          description: "Наименование заказа"
        orderDate:
          type: string
          example: "17.10.2023"
          description: "Дата заказа"
        vendorName:
          type: string
          example: "ООО ПО «Трубное Решение»"
          description: "Наименование поставщика"
        positions:
          type: array
          items:
            $ref: '#/components/schemas/DraftItem'
    DraftItem:
      type: object
      properties:
        id:
          type: string
          example: "0011-ed15-0001"
          description: "id позиции"
        included:
          type: boolean
          example: true
          description: "true, если позиция включена в список для распознавания"
        lineNo:
          type: number
          example: 4
          description: "Номер строки спецификации в исходном файле"
        posName:
          type: string
          example: "П1.1"
          description: "Позиционное обозначение изделия в исходном файле"
        name:
          type: string
          example: "Тройник ст. 1.2мм, 400х1200 - 1000х1200 - 400х1200, 90град, L=1200, h=100, фл32, х/к, грунт"
          description: "Наименование и технические характеристики"
        typeName:
          type: string
          example: "Тип, марка"
          description: "Тип, марка"
        code:
          type: string
          example: "Код"
          description: "Код"
        manufactor:
          type: string
          example: "Изготовитель"
          description: "Изготовитель"
        units:
          type: string
          example: "шт."
          description: "Единицы измерения"
        count:
          type: number
          example: 7
          description: "Количество"
        weight:
          type: number
          example: 15.312
          description: "Масса, кг"
        note:
          type: string
          example: "Текст примечания к позиции"
          description: "Текст примечания к позиции"          
        system:
          type: string
          example: "ПВС-1"
          description: "Наименование системы"
        recognizeId:
          type: string
          example: "0011-ef15-0001"
          description: "id распознанного изделия"
        recognizeType:
          type: string
          example: "Тройник Ø/Ø/Ø"
          description: "Распознанный тип изделия"
        recognizeName:
          type: string
          example: "Тройник ст. 1.2мм, 400х1200 - 1000х1200 - 400х1200, 90град, L=1200, h=100, фл32, х/к, грунт"
          description: "Распознанная номенклатура"
        recognizeUnits:
          type: string
          example: "шт."
          description: "Распознанные единицы измерения"
        recognizeCount:
          type: number
          example: 7
          description: "Количество"
    SaveDraftItem:
      type: object
      properties:
        id:
          type: string
          example: "0011-ed15-0001"
          description: "id позиции"
        included:
          type: boolean
          example: true
          description: "true, если позиция включена в список для распознавания"
        recognizeId:
          type: string
          example: "0011-ef15-1111"
          description: "id распознанного изделия"
        recognizeUnits:
          type: string
          example: "шт."
          description: "Распознанные единицы измерения"
        recognizeCount:
          type: number
          example: 7
          description: "Количество"
    SetExcelFileId:
      type: object
      properties:
        orderId:
          type: string
          example: "0011-ed15-0002, либо 0"
          description: "id заказа для внесения позиций из файла, либо 0, если заказа еще не существует"
        vendorId:
          type: string
          example: "0011-ed15-0088"
          description: "id поставщика для создания нового заказа"
        fileId:
          type: string
          example: "0011-ed15-0002.xls"
          description: "id файла со спецификацией"
    OrderPositionItem:
      type: object
      properties:
        id:
          type: string
          description: "id изделия"
        isActual:
          type: boolean
          description: "Актуальность данных"
        name:
          type: string
          description: "Наименование поменклатуры"
        printName:
          type: string
          description: "Наименование поменклатуры для документов"
        count:
          type: number
          description: "Количество в основных единицах"
        units:
          type: string
          description: "Наименование основных единиц"
        price:
          type: number
          description: "Цена за основную единицу"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        altUnitsList:
          type: array
          description: "Список допустимых для позиции дополнительных единиц"
          items:
            type: string 
        altPrice:
          type: number
          description: "Цена за дополнительную единицу"
        weight:
          type: number
          description: "Вес, кг"
        square:
          type: number
          description: "Площадь, м2"
        singleWeight:
          type: number
          description: "Вес одного изделия, кг"
        singleSquare:
          type: number
          description: "Площадь одного изделия, м2"
        system:
          type: string
          description: "Наименование системы"
        comment:
          type: string
          description: "Комментарий"
        taxRate:
          type: string
          description: "Ставка НДС"
        taxSumm:
          type: number
          description: "Сумма НДС"
        discountRate:
          type: number
          description: "Скидка в %"
        discountSumm:
          type: number
          description: "Сумма скидки"
        summ:
          type: number
          description: "Стоимость позиции"
    SaveOrderPositionItem:
      type: object
      properties:
        id:
          type: string
          description: "id изделия"
        count:
          type: number
          description: "Количество в основных единицах"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        system:
          type: string
          description: "Наименование системы"
        comment:
          type: string
          description: "Комментарий"
    GetCustomersSchema:
      type: array
      example: [{"id": "34de-21abc-12-004", "name": "ИП Джумаев Мухаммади Фуркатович"}, {"id": "34de-21abc-12-005", "name": "ООО Веселый воздуховод"}, {"id": "34de-21abc-12-006", "name": "ООО Грустный фланец"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id покупателя"
          name:
            type: string
            description: "Наименование покупателя"
    GetOptionsResponse:
      type: object
      example: {'altUnitsVisible': true, "linearMeterRounded": "ceil", "squareMeterRounded": "ceil", "printNameVisible": false, "systemVisible": false, "commentVisible": false, "ndsVisible": false, "singleWeightVisible": false, "singleSquareVisible": false}
      properties:
        altUnitsVisible:
          type: boolean
          description: "Показывать ли в заказе колонки дополнительные параметры"
        linearMeterRounded:
          type: string
          description: "Способ округления погонных метров: В большую сторону(ceil), В меньшую сторону (floor)"
          enum:
            - ceil
            - floor
        squareMeterRounded:
          type: string
          description: "Способ округления квадратных метров: В большую сторону(ceil), В меньшую сторону (floor)"
          enum:
            - ceil
            - floor
        printNameVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'Наименование в документах'"
        systemVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'Система'"
        commentVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'Комментарий'"
        ndsVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'НДС'"
        singleWeightVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'Вес (1 изд), кг'"
        singleSquareVisible:
          type: boolean
          description: "Показывать ли в заказе колонку 'S (1 изд), м²'"
    GetSpecOptionsResponse:
      type: object
      example: {"name": true, "printName": true, "count": true, "units": true, "price": true, "altUnits": true, "weight": true, "square": true, "maxSize": true, "sizeVolume": true, "system": true, "comment": true, "taxRate": true, "taxSumm": true, "discountRate": true, "discountSumm": true, "summ": true, "groupType": "system", "draft": true, "sendEmail": true, "email": "name@mail.ru", "fileFormat": "xlsx"}
      properties:
        name:
          type: boolean
          description: "Выгружать номенклатуру в спецификацию"
        printName:
          type: boolean
          description: "Выгружать наименование в документах в спецификацию"
        count:
          type: boolean
          description: "Выгружать количество в спецификацию"
        units:
          type: boolean
          description: "Выгружать единицы изменения в спецификацию"
        price:
          type: boolean
          description: "Выгружать цену в спецификацию"
        altUnits:
          type: boolean
          description: "Выгружать доп. единицы изменения в спецификацию"
        weight:
          type: boolean
          description: "Выгружать вес в спецификацию" 
        square:
          type: boolean
          description: "Выгружать площадь в спецификацию"
        maxSize:
          type: boolean
          description: "Выгружать максимальный габарит в спецификацию"
        sizeVolume:
          type: boolean
          description: "Выгружать габаритный объём в спецификацию"        
        system:
          type: boolean
          description: "Выгружать систему в спецификацию" 
        comment:
          type: boolean
          description: "Выгружать комментарий в спецификацию"
        taxRate:
          type: boolean
          description: "Выгружать ставку НДС в спецификацию"
        taxSumm:
          type: boolean
          description: "Выгружать сумму НДС в спецификацию"
        discountRate:
          type: boolean
          description: "Выгружать процент скидки в спецификацию"
        discountSumm:
          type: boolean
          description: "Выгружать сумму скидки в спецификацию"
        summ:
          type: boolean
          description: "Выгружать общую сумму в спецификацию"
        groupType:
          type: string
          description: "Способ группировки: не группировать (none), по системам (system), по номенклатуре (nomenclature)"
          enum:
            - none
            - system
            - nomenclature
        draft:
          type: boolean
          description: "Включить эскизы в спецификацию"
        sendEmail:
          type: boolean
          description: "Отправлять ли спецификацию на почту"
        email:
          type: string
          description: "Адрес эл. почты для отправки спецификации"
        fileFormat:
          type: string
          description: "Формат файла спецификации"
          enum:
            - pdf
            - xls
            - xlsx
            - docx
            - ods
    SetSpecOptionsResponse:
      type: object
      example: {"id": "001-ef11-0015-1111", "name": true, "printName": true, "count": true, "units": true, "price": true, "altUnits": true, "weight": true, "square": true, "maxSize": true, "sizeVolume": true, "system": true, "comment": true, "taxRate": true, "taxSumm": true, "discountRate": true, "discountSumm": true, "summ": true, "groupType": "system", "draft": true, "to1C": true, "sendEmail": true, "email": "name@mail.ru", "fileFormat": "xlsx"}
      properties:
        id:
          type: string
          description: "id заказа"
        name:
          type: boolean
          description: "Выгружать номенклатуру в спецификацию"
        printName:
          type: boolean
          description: "Выгружать наименование в документах в спецификацию"
        count:
          type: boolean
          description: "Выгружать количество в спецификацию"
        units:
          type: boolean
          description: "Выгружать единицы изменения в спецификацию"
        price:
          type: boolean
          description: "Выгружать цену в спецификацию"
        altUnits:
          type: boolean
          description: "Выгружать доп. единицы в спецификацию"
        weight:
          type: boolean
          description: "Выгружать вес в спецификацию" 
        square:
          type: boolean
          description: "Выгружать площадь в спецификацию"
        maxSize:
          type: boolean
          description: "Выгружать максимальный габарит в спецификацию"
        sizeVolume:
          type: boolean
          description: "Выгружать габаритный объём в спецификацию" 
        system:
          type: boolean
          description: "Выгружать систему в спецификацию" 
        comment:
          type: boolean
          description: "Выгружать комментарий в спецификацию"
        taxRate:
          type: boolean
          description: "Выгружать ставку НДС в спецификацию"
        taxSumm:
          type: boolean
          description: "Выгружать сумму НДС в спецификацию"
        discountRate:
          type: boolean
          description: "Выгружать процент скидки в спецификацию"
        discountSumm:
          type: boolean
          description: "Выгружать сумму скидки в спецификацию"
        summ:
          type: boolean
          description: "Выгружать общую сумму в спецификацию"
        groupType:
          type: string
          description: "Способ группировки: не группировать (none), по системам (system), по номенклатуре (nomenclature)"
          enum:
            - none
            - system
            - nomenclature
        draft:
          type: boolean
          description: "Включить эскизы в спецификацию"
        to1C:
          type: boolean
          description: "Генерировать файл обмена с 1С"
        sendEmail:
          type: boolean
          description: "Отправлять ли спецификацию на почту"
        email:
          type: string
          description: "Адрес эл. почты для отправки спецификации"
        fileFormat:
          type: string
          description: "Формат файла спецификации"
          enum:
            - pdf
            - xls
            - xlsx
            - docx
            - ods
    SearchPositions:
      type: object
      example: {"search": "100 200", "manufacturId": "05494d3d-7633-11ee-816c-c860006cd176"}
      properties:
        search:
          type: string
          description: "Строка для поиска"
        manufacturId:
          type: string
          description: "id производителя"
    SearchPositionsResponse:
      type: array
      example: [{"id": "101d-1311-0e0a", "name": "Воздуховод прямоугольный 100х200", "typeName": "Прямая часть #"}, {"id": "101d-1311-0e0b", "name": "Отвод 100х200", "typeName": "Прямая часть #"}, {"id": "101d-1311-0e0b", "name": "Зонт вытяжной 100х200", "typeName": "Прямая часть #"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id найденной позиции"
          name:
            type: string
            description: "Наименование поменклатуры"
          typeName:
            type: string
            description: "Наименование типа изделия"
    ChangePositions:
      type: array
      items:
        $ref: '#/components/schemas/ChangePosition'
    ChangePosition:
      type: object
      example: {"id": "101d-1311-0e0a", "count": 17, "altCount": 15.22, "altUnits": "пог.м", "discountRate": 15, "discountSumm": 150.56, "changeField": "altCount", "linearMeterRounded": "none", "squareMeterRounded":"ceil"}
      properties:
        id:
          type: string
          description: "id запрашиваемой позиции"
        count:
          type: number
          description: "Количество в основных единицах"
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
        discountRate:
          type: string
          description: "Скидка в процентах"
        discountSumm:
          type: string
          description: "Скидка в рублях"
        changeField:
          type: string
          description: "Поле, которое пользователь изменил при редактировании"
          enum:
            - count
            - altCount
            - altUnits
            - discountRate
            - discountSumm
        linearMeterRounded:
          type: string
          description: "Способ округления погонных метров: В большую сторону(ceil), В меньшую сторону (floor)"
          enum:
            - ceil
            - floor
        squareMeterRounded:
          type: string
          description: "Способ округления квадратных метров: В большую сторону(ceil), В меньшую сторону (floor)"
          enum:
            - ceil
            - floor   
    ChangePositionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ChangePositionResponse'
    ChangePositionResponse:
      $ref: '#/components/schemas/ChangePositionItem'
    ChangePositionItem:
      type: object
      properties:
        id:
          type: string
          description: "id изделия"
          example: "0111-ef15-0001"
        isActual:
          type: boolean
          description: "Актуальность"
        name:
          type: string
          description: "Наименование изделия"
          example: "Отвод х/к ст. 0.8мм, сварн., 700х400, 90град, шея1=100, шея2=100, фл25/фл25, грунт красн-кор"
        printName:
          type: string
          description: "Наименование изделия для документов"
          example: "Отвод х/к ст. 0.8мм, сварн., 700х400, 90град, шея1=100, шея2=100, фл25/фл25, грунт красн-кор"
        count:
          type: number
          description: "Количество в основных единицах"
          example: 17
        units:
          type: string
          description: "Наименование основных единиц"
          example: "шт"
        price:
          type: number
          description: "Цена за основную единицу"
          example: 623
        altCount:
          type: number
          description: "Количество в дополнительных единицах"
          example: 50
        altUnits:
          type: string
          description: "Наименование дополнительных единиц"
          example: "м2"
        altUnitsList:
          type: array
          description: "Список допустимых для позиции дополнительных единиц"
          example: ["м2", "м.пог."]
          items:
            type: string
        altPrice:
          type: number
          example: 15.8
          description: "Цена за дополнительную единицу"
        weight:
          type: number
          example: 14.55
          description: "Вес, кг"
        square:
          type: number
          example: 5.6
          description: "Площадь, м2"
        taxRate:
          type: string
          example: 13
          description: "Ставка НДС"
        taxSumm:
          type: number
          example: 144.5
          description: "Сумма НДС"
        discountRate:
          type: number
          example: 20
          description: "Скидка в %"
        discountSumm:
          type: number
          example: 158
          description: "Сумма скидки"
        summ:
          type: number
          example: 10591
          description: "Стоимость позиции"
        error:
          type: string
          example: "Сталь не может быть меньше 1.4"
          description: "Текст ошибки при пересчете, иначе пустая строка"
    ChangeSteel:
      type: object
      properties:
        steelType:
          type: string
          example: "galvanized"
          description: "Тип стали: blackcold=черная, galvanized=оцинкованная, stainless=нержавеющая"
          enum:
            - blackcold
            - galvanized
            - stainless
        steelThickness:
          type: number
          description: "Толщина стали"
          example: 1.2
        positions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "0111-ef15-0001"
                description: "id номенклатурной позиции для пересчета"
              count:
                type: number
                example: 17
                description: "Количество в основных единицах"
    ChangeSteelResponse:
      type: array
      items:
        $ref: '#/components/schemas/ChangePositionItem'
    SaveOrder:
      type: object
      example: {"id": "34de-21abc-12-004 | 0 (если новый)", "orderDate": "2023-10-18T00:00:00", "customerId": "12c0-1aa3-1411", "manufactorId": "12c0-1aa3-1412", "objectName": "Государственный Эрмитаж", "objectAddress": "СПб, Дворцовая наб., д.38", "wishShipmentDate": "2023-11-28T00:00:00", "realShipmentDate": "2023-12-15T00:00:00", "comment": "Отличный заказ", "deliveryWayId": "00af-ac15-0011-0000", "recipient": "Илон Маск", "recipientPhone": "+7 911 111 1111", "deliveryCost": 1516, "deliveryInclude": true, "deliveryComment": "Доставка на Марс",  "positions":[{"id": "15ef-1255-ab13", "count": 17, "altCount": 23.09, "altUnits": "пог.м", "system": "ПВ1, АПВ-3", "comment": "Распрекрасная позиция"}], 'orderOptions': {'altUnitsVisible': true, "linearMeterRounded": "ceil", "squareMeterRounded": "ceil", "printNameVisible": false, "systemVisible": false, "commentVisible": false, "ndsVisible": false, "singleWeightVisible": false, "singleSquareVisible": false}, "orderSpecOptions":{"name": true, "printName": true, "count": true, "units": true, "price": true, "altUnits": true, "weight": true, "square": true, "maxSize": true, "sizeVolume": true, "system": true, "comment": true, "taxRate": true, "taxSumm": true, "discountRate": true, "discountSumm": true, "summ": true, "groupType": "system", "draft": true, "sendEmail": true, "email": "name@mail.ru", "fileFormat": "xlsx"}}
      properties:
        id:
          type: string
          description: "ID заказа"
        orderDate:
          type: string
          description: "Дата заказа"  
        customerId:
          type: string
          description: "Id покупателя"
        manufactorId:
          type: string
          description: "Id производителя"
        objectName:
          type: string
          description: "Наименование объекта"
        objectAddress:
          type: string
          description: "Адрес объекта"
        wishShipmentDate:
          type: string
          description: "Желаемая дата отгрузки"
        realShipmentDate:
          type: string
          description: "Согласованная дата отгрузки"
        comment:
          type: string
          description: "Комментарий к заказу"
        deliveryWayId:
          type: string
          description: "id способа доставки (исходя из справочника getDeliveryWays)"
        recipient:
          type: string
          description: "Контактное лицо Получателя"
        recipientPhone:
          type: string
          description: "Контактный телефон Получателя"
        deliveryInclude:
          type: boolean
          description: "Включить доставку в стоимость товара"
        deliveryComment:
          type: sting
          description: "Комментарий по доставке"
        positions:
          type: array
          items:
            $ref: '#/components/schemas/SaveOrderPositionItem'
        orderOptions:
          $ref: '#/components/schemas/GetOptionsResponse'
        specOptions:
          $ref: '#/components/schemas/GetSpecOptionsResponse'
    SaveDraft:
      type: object
      properties:
        id:
          type: string
          description: "id заказа"
          example: "015-01ef-0011"
        positions:
          type: array
          items:
            $ref: '#/components/schemas/SaveDraftItem'
    SaveOrderResponse:
      type: object
      properties:
        id: 
          type: string
          description: "id заказа"
    GetMaterialsResponse:
      type: array
      example: [{"id": "015-01ef-0011", "name": "Внутренний корпус ГТК из сетки оц. стали, диаметр 315, L 900", "units": "шт.", "price": 14.5, "count": 12, "waste": 0.000, "summ": 319, "childs": [{"id": "011-1ef-0012", "name": "Сетка ПВС TR1606/0.7/1.47/880-5000/Zn08ПС" ,"productCount": 12 ,"waste": 0.000, "summ": 319}]}]
      items:
        $ref: '#/components/schemas/OrderMaterialItem'
    OrderMaterialItem:
      type: object
      properties:
        id:
          type: string
          description: "id материала"
        name:
          type: string
          description: "Наименование материала"
        units:
          type: string
          description: "Единицы измерения"
        price:
          type: number
          description: "Цена, руб"
        count:
          type: number
          description: "Количество"
        waste:
          type: number
          description: "Отход, поле может отсутствовать"
        summ:
          type: number
          description: "Сумма, руб"
        childs:
          type: array
          description: "Вложенный список сборочных единиц в формате [id, name, productCount, waste, summ, childs]. Может отсутствовать, может быть рекурсивным"
          items:
            $ref: '#/components/schemas/OrderMaterialItem'
    GetOperationsResponse:
      type: object
      example: {"planLaborIntensity": 197, "planPreparationTime": "32:46", operations: [{"id": "015-01ef-0011", "name": "Лазерная резка", "standardTime": "01:37", "childs": [{"id": "011-1ef-0012", "name": "Протяжка рулона на лазере", "standardTime": "00:24", "childs": [{"id": "011-1ef-0013", "name": "Тройник прямой оц.ст. 0.65 мм 1300х1100 / Ф70 / 1300х1100 L=1700 мм h=100 мм отб40 / вырезной / загл Эмаль ПФ115", "standardTime": "00:09"}]}]}]}
      properties:
        planLaborIntensity:
          type: number
          description: "Плановая трудоёмкость заказа (человеко-час)"
        planPreparationTime:
          type: string
          description: "Плановое время изготовления Заказа (час:мин)"
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OrderOperationItem'
    GetDeliveryWaysResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: "id способа доставки"
          deliveryWay:
            type: string
            description: "Наименование способа доставки"
    OrderOperationItem:
      type: object
      properties:
        id:
          type: string
          description: "id операции"
        name:
          type: string
          description: "Наименование операции"
        standardTime:
          type: string
          description: "Норма времени (час:мин)"
        childs:
          type: array
          description: "Вложенный список операций в таком же формате [id, name, standardTime, childs]. Может отсутствовать, может быть рекурсивным"
          items:
            $ref: '#/components/schemas/OrderOperationItem'
    GetPaymentsResponse:
      type: array
      example: [{"id": "015-01ef-0011", "billDate": "03.11.2022T00:00:00", "paymentDate": "09.11.2022T00:00:00", "name": "Покупка вентизделий для дома-музея Фредди Меркьюри на ул. Фучика", "summ": 42057.08}]
      items:
        $ref: '#/components/schemas/OrderPaymentItem'
    OrderPaymentItem:
      type: object
      properties:
        id:
          type: string
          description: "id платежа"
        billDate:
          type: string
          description: "Дата выставления счета"
        paymentDate:
          type: string
          description: "Дата оплаты"
        name:
          type: string
          description: "Наименование платежа"
        summ:
          type: number
          description: "Сумма платежа"  
    GetProductById:
      type: object
      example: {"id": "0011-11ef-1111"}
      properties:
        id:
          type: string
          description: "id изделия"
    GetBestViewCoordResponse:
      type: object
      properties:
        x:
          type: number
          example: 5.781234546775
          description: "Координата x камеры"
        y:
          type: number
          example: -11.458304455454
          description: "Координата y камеры"
        z:
          type: number
          example: 13.554508700258
          description: "Координата z камеры" 
    GetProductByIdResponse:
      type: object
      example: {"type": "RoundStraightIncut_t", "properties": {"SteelType": "galvanized", "SteelThickness": 0.45, "D": 200, "FireResistanceClass": "none"}, "common": {"names": [{"title": "Основное", "name": "Тройник прямой оц.ст. 0.65 мм"}, {"title": "Для печати", "name": "Тройник прямой оц.ст. 0.65 мм"}], "actual": true, "recalcDate": "2023-12-07T09:28:46"}, "prices": [{"id": "AccCost", "price": 436, "title": "Учетная цена (себестоимость)", "description": "Полная себестоимость изготовления без НДС"}], "totals": {"weight": 2.476, "wasteWeight": 0.195, "time": "05:34", "laborIntensity": 5.4}, "materials": [{"id": "015-01ef-0011", "name": "Внутренний корпус ГТК из сетки оц. стали, диаметр 315, L 900", "units": "шт.", "count": 12, "waste": 0, "childs": [{"id": "011-1ef-0012", "name": "Сетка ПВС TR1606/0.7/1.47/880-5000/Zn08ПС", "count": 12, "waste": 0}]}], "operations": [{"id": "0011-ef15-0001", "stage": "Лазерная резка", "area": "Участок резки", "name": "Протяжка рулона на лазере", "time": "00:07", "laborIntensity": 0.6, "childs": [{"id": "011-1ef-0013", "name": "Врезка круг/круг седло из оц. стали, диаметр 100/100, H=100", "time": "00:07", "laborIntensity": 0.6}]}], "sizes": {"length": 2200, "width": 1750, "height": 1400, "weight": 6.073, "square": 1.25, "volume": 5.39}}
      properties:
        type:
          type: string
          description: "Тип изделия"
        properties:
          type: object
          description: "Индивидуальные параметры изделия"
          properties:
            SteelType:
              type: string
              description: "Тип стали (итд)"
        common:
          type: object
          properties:
            names:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                    description: "Наименование заголовка"
                  name:
                    type: string
                    description: "Наименование поменклатуры"
            actual:
              type: boolean
              description: "Актуальность данных (true = не требудет пересчета)"
            recalcDate:
              type: string
              description: "Дата расчета"
        prices:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: "id цены"
              title:
                type: string
                description: "Наименование цены"
              description:
                type: string
                description: "Описание цены"
              price:
                type: number
                description: "Цена"
        totals:
          type: object
          properties:
            weight:
              type: number
              example: 2.476
              description: "Общий вес стали, кг"
            wasteWeight:
              type: number
              example: 0.195
              description: "Общий вес отхода стали, кг"
            time:
              type: string
              example: "05:34"
              description: "Суммарное время изготовления (мин:сек)"
            laborIntensity:
              type: number
              example: 5.4
              description: "Общая трудоёмкость изготовления (чел*час)"
        materials:
          $ref: '#/components/schemas/GetMaterialsResponse'
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OperationItem'
        sizes:
          type: object
          properties:
            length:
              type: number
              description: "Длина изделия, мм"
            width:
              type: number
              description: "Ширина изделия, мм"
            height:
              type: number
              description: "Высота изделия, мм"
            weight:
              type: number
              description: "Вес изделия, кг"
            square:
              type: number
              description: "Площадь изделия, м2"
            volume:
              type: number
              description: "Объем изделия, м3"
    OperationItem:
      type: object
      properties:
        id:
          type: string
          description: "id операции"
        stage:
          type: string
          description: "Этап"
        area:
          type: string
          description: "Участок"
        name:
          type: string
          description: "Наименование операции"
        time:
          type: string
          description: "Время (час:мин)"
        laborIntensity:
          type: number
          description: "Трудоемкость (чел * часы)"
        childs:
          type: array
          description: "Вложенный список операций в таком же формате [id, name, time, laborIntensity, childs]. Может отсутствовать, может быть рекурсивным"
          items:
            $ref: '#/components/schemas/OperationItem'
    GetProductList:
      type: object
      properties:
        sectionId:
          type: string
          description: "id раздела"
        search:
          type: string
          description: "Строка поиска изделия"
        offsetId:
          type: string
          description: "id последнего принятого элемента"
          example: "015-01ef-0011"
        offsetName:
          type: string
          description: "Имя последнего принятого элемента"
          example: "Врезка круг/прям оц. сталь 0.45, ф100, H=70"
    GetProductListResponse:
      type: object
      properties:
        end:
          type: boolean
          example: true
          description: "Флаг полной выгрузки списка (для выключения пагинации)"
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductListItem'
    GetUnactualCountResponse:
      type: object
      properties:
        availCalcs:
          type: number
          example: 2719
          description: "Доступно расчетов"
        unactualTotal:
          type: number
          example: 537
          description: "Всего неактуальных позиций"
        unactualInSections:
          type: object
          description: "Кол-во неактуальных позиций в разделах"
          properties:
            id:
              type: string
              description: "id раздела"
              example: "015-01ef-0011"
            count:
              type: number
              description: "Количество неактуальных позиций в разделе"
              example: 12
    GetRecalcCountResponse:
      type: object
      properties:
        recalcCount:
          type: number
          example: 1286
          description: "Текущее количество позиций, находящихся в процессе пересчета"
    ProductListItem:
      type: object
      properties:
        id:
          type: string
          example: "011-ef12-0001"
          description: "id изделия"
        actual:
          type: string
          enum:
            - actual
            - notActual
            - inProgress
          description: "Актуальность данных (actual = актуально (не требует пересчета), notActual = неактуально, inProgress = в процессе пересчета)"
        name:
          type: string
          example: "Врезка (адаптер) из оц. стали, класс 'B' для EI, 400х200, L=1500, исп.2"
          description: "Наименование изделия"
        units:
          type: string
          example: "шт."
          description: "Единицы измерения"
        matCost:
          type: number
          example: 986.74
          description: "Стоимость материалов, руб"
        workCost:
          type: number
          example: 564.00
          description: "Стоимость работ, руб"
        netCost:
          type: number
          example: 1472.58
          description: "Себестоимость, руб"
        minPrice:
          type: number
          example: 2453.49
          description: "Минимальная цена, руб"
        price:
          type: number
          example: 2780.63
          description: "Розница, руб"
    RecalcSectionProductList:
      type: object
      properties:
        sectionId:
          type: string
          description: "id раздела"
          example: "015-01ef-0011"
    GetUnactualCount:
      type: object
      properties:
        sectionId:
          type: string
          description: "id раздела"
          example: "015-01ef-0011"
    RecalcSelectProductList:
      type: object
      example: "{ids: ['015-01ef-0011', '015-01ef-0012', '015-01ef-0013']}"
      properties:
        ids:
          type: array
          items:
            type: string
    ParamsAndCoords:
      type: object
      example: {'_front_par_coords': {'x': 12.45345345, 'y': 8.45451, "z": -1.599812}, 'A':100,'B':100,'End1':'so_flange20','End2':'so_flange20','FireResistanceClass':'none','InstallMethodFlange1':'press_screw'}
      description: "Параметры изделия"         
    GetHistoryResponse:
      type: array
      example: [{"id": "015-01ef-0011", "date": "03.11.2022T09:57:00", "name": "Событие: Тексты событий формируются беком", "user": "Фамилия И. О."}]
      items:
        $ref: '#/components/schemas/OrderHistoryItem'
    OrderHistoryItem:
      type: object
      properties:
        id:
          type: string
          description: "id события"
        date:
          type: string
          description: "Дата/время события"
        name:
          type: string
          description: "Наименование события"
        user:
          type: string
          description: "Пользователь"
    GetFilesResponse:
      type: array
      example: [{"id": "015-01ef-0011", "name": "Name_loading_file.docx", "date": "03.11.2022T00:00:00", "size": "36942", "readonly": false}]
      items:
        $ref: '#/components/schemas/OrderHistoryItem'
    OrderFileItem:
      type: object
      properties:
        id:
          type: string
          description: "id файла"
        name:
          type: string
          description: "Имя файла"
        date:
          type: string
          description: "Дата загрузки файла"
        size:
          type: string
          description: "Размер файла, КВ"
        readonly:
          type: boolean
          description: "Файл запрещен к удалению"
    GetLogCalcs:
      type: object
      example: {"configId": "015-01ef-0011", "search": "Самый лучший расчет", "from": "03.11.2022T00:00:00", "to": "13.11.2022T00:00:00", offset: 0}
      properties:
        configId: 
          type: string
          description: "Фильтр по id конфигурации"
        search:
          type: string
          description: "Фильтр по строке поиска"  
        from:
          type: string
          description: "Фильтр по дате расчета (начало периода)"
        to:
          type: string
          description: "Фильтр по дате расчета (окончание периода)"
        offset:
          type: number
          description: "Сдвиг пагинации"
    GetLogCalcsResponse:
      example: {end: true, cals: [{"id": "015-01ef-0011", "num": 1, "date": "31.08.2023T09:26:44", "name": "Тип изделия металл, размеры 1, размеры 2, особенности", "application": "1С — Клиент", "packId": "000000000000006203", "hash": "08e4328a6e00eb1050b837ec2404862c"}]}
      type: object
      properties:
        end:
          type: boolean
          example: true
          description: "Флаг полной выгрузки списка (для выключения пагинации)"
        cals:
          type: array
          items:
            $ref: '#/components/schemas/LogCalcItem'
    LogCalcItem:  
      type: object
      properties:
        id:
          type: string
          description: "id расчета"
        num:
          type: number
          description: "Порядковый номер расчета"
        date:
          type: string
          description: "Дата и время расчета"
        name:
          type: string
          description: "Наименование расчета"
        application:
          type: string
          description: "Приложение для расчета"
        packId:
          type: string
          description: "id пакета расчета"
        hash:
          type: string
          description: "Хеш расчета"
    GetConfigsResponse:
      type: array
      example: [{"id": "015-01ef-0011", "name": "ООО Трубное решение"}, {"id": "015-01ef-0012", "name": "ОАО Вентилятор"}]
      items:
        type: object
        properties:
          id:
            type: string
            description: "id конфигурации"
          name:
            type: "string"
            description: "Наименовании конфигурации"
    GetVendors:
      type: object
      example: {"search": "Трубное решение"}
      properties:
        search: 
          type: string
          description: "Фильтр по строке поиска"
    GetVendorsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: "id поставщика"
            example: "015-01ef-0011"
          name:
            type: string
            description: "Наименовании поставщика"
            example: "Трубное решение"
          isBaseConfig:
            type: boolean
            example: true
            description: "true, если поставщик использует базовую конфигурацию"
          billTerm:
            type: number
            description: "Срок выставления счета (дней)"
            example: 2
          payTerm:
            type: number
            description: "Срок оплаты (дней)"
            example: 3
          deliveryTerm:
            type: number
            description: "Срок поставки (дней)"
            example: 5
          selfDelivery:
            type: boolean
            example: true
            description: "Разрешен самовывоз"
          vendorDelivery:
            type: boolean
            example: true
            description: "Разрешена доставка поставщиком"
          mapAreas:
            type: object
            description: "Описание координат областей возможной доставки"
            properties:
              center:
                type: array
                description: "Центр карты"
                example: [55.75, 37.62]
                items:
                  type: number
              zoom:
                type: number
                description: "Масштаб карты по умолчанию"
                example: 14
              poligons:
                type: array
                description: "Массив областей с массивом координат"
                example: [[[54.75, 36.62], [55.55, 37.52], [58.55, 39.52]], [[64.75, 36.62], [65.55, 37.52], [68.55, 39.52]]]
                items:
                  areas:
                    type: array
                    items:
                      points:
                        type: array
                        items:
                          point:
                            type: number
          loadAddress:
            type: string
            description: "Адрес погрузки"
            example: "СПб, пр. Ветеранов, 56, строение 4"
          site:
            type: string
            description: "Сайт производителя"
            example: "https://name-site.com"
          phone:
            type: string
            description: "Телефон производителя"
            example: "+7 905 703-44-03"
    SetRegionMapAreas:
      type: object
      properties:
        id:
          type: string
          description: "id региона"
          example: "015-01ef-0011"
        center:
          type: array
          description: "Координаты центра для отображения всего региона"
          example: [37.616558, 55.751453]
          items:
            type: number
        zoom:
          type: number
          description: "Масштаб карты для отображения всего региона"
          example: 14
        poligons:
          type: array
          description: "Массив массивов массивов [x,y] с географическими координатами границ региона"
          example: [[[37.61249, 55.747689], [37.623876, 55.749519], [37.62079, 55.754326]],[[38.61249, 55.747689], [38.623876, 55.749519], [38.62079, 55.754326]]]
          items:
            type: array
            items:
              type: array
              items:
                type: number
    GetMaterialsSectionsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: "id секции"
            example: "015-01ef-0011"
          name:
            type: string
            description: "Наименовании секции"
            example: "Листовой металл"
    GetCommonSchema:
      type: object
      properties:
        id:
          type: string
          description: "id схемы"
          example: "root"
    GetConfigMaterials:
      type: object
      properties:
        section: 
          type: string
          description: "Фильтр по id секции"
          example: "015-01ef-0011"
        search: 
          type: string
          description: "Фильтр по строке поиска"
          example: "Штрипс"
        offsetId:
          type: string
          description: "id последнего принятого элемента"
          example: "015-01ef-0011"
        offsetName:
          type: string
          description: "Имя последнего принятого элемента"
          example: "Болт М8х20мм"
    GetCommonSchemaResponse:
      type: object
      example: {"$id": "/root","type": "object","title": "Все настройки","description": "Все настройки","properties": {"common": { "$ref": "/common" }}, "required": ["common"], "children": ["common"]}
    GetConfigMaterialsResponse:
      type: object
      properties:
        end:
          type: boolean
          example: true
          description: "Флаг полной выгрузки списка (для выключения пагинации)"
        list:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: "id материала"
                example: "015-01ef-0011"
              name:
                type: string
                description: "Наименование материала"
                example: "Штрипс оц. 0.45/137"
              price:
                type: number
                description: "Цена (с НДС), ₽"
                example: 90
              units:
                type: string
                description: "Единицы измерения"
                example: "кг"
    GetConfigEconomic:
      type: object
      properties:
        section: 
          type: string
          description: "Фильтр по наименованию секции"
          example: "common.seams"
    GetConfigEconomicResponse:
      type: object
      example: {"AddedCostTax": 0.2,"MinPriceIncrease": 0.54,"PlannedProfit": 0.05,"ProfitTax": 0.2,"WorkHourPayment": 450,"WorkOverheads": 1.91} 
    SetMaterialPrices:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: "id материала"
            example: "015-01ef-0011"
          price:
            type: number
            description: "Цена (с НДС), ₽"
            example: 95
    SetEconomicParamValue:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: "id параметра"
            example: "015-01ef-0011"
          value:
            type: number
            description: "Значение"
            example: 490 
    GetConfigModelResponse:
      type: object
      description: "Конфигурация прав пользователей и статусная модель заказов"
      example: {rightsRules: {discountRate: {buyer: { any: 'disabled' }}}, stateMachine: {open: {buyer: { buttons: [{ title: 'Запрос КП', newState: 'ordered'}]}}}}
      properties:
        rightsRules:
          type: object
        stateMachine:
          type: object
    GetLegalSectionsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: "id раздела"
            example: "015-01ef-0011"
          sectionName:
            type: string
            description: "Наименование раздела"
            example: "Первый тематический раздел"
          articles:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: "id документа"
                  example: "015-01ef-0022"
                title:
                  type: string
                  description: "Заголовок документа"
                  example: "Правила подписки и использования сервисов"     
tags:
  - name: auth
    description: Авторизация/регистрация
  - name: product
    description: Изделия
  - name: profile
    description: Страница профиля
  - name: packs
    description: Страница пакетов расчета
  - name: files
    description: Работа с документами
  - name: orders
    description: Работа с заказами
  - name: order
    description: Работа с заказом
  - name: logcalcs
    description: Работа с журналом расчетов
  - name: vendors
    description: Работа со списком поставщиков
  - name: config
    description: Работа с конфигурацией
  - name: help
    description: Работа с документацией
  - name: statistic
    description: Статистические данные
  - name: downloads
    description: Работа со страницей загрузок
  - name: news
    description: Работа со страницей новостей
  - name: payments
    description: Работа с историей платежей
  - name: chat
    description: Работа с чатом поддержки пользователей
paths:

  # auth part

  /fIVI/api/auth/login:
    post:
      tags:
        - auth
      summary: "Авторизация по логину и паролю"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /sIVI/User/login:
    get:
      tags:
        - auth
      security:
        - bearerAuth: []
      parameters:
        - name: ibsession
          in: header
          required: true
          type: string
          example: "start"
      summary: "Авторизация по токену, получение куки"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /fIVI/api/auth/setPassword:
    post:
      tags:
        - auth
      summary: "Установить новый пароль"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPasswordResponse'
  /fIVI/api/auth/getRegistration:
    post:
      tags:
        - auth
      summary: "Получить на почту ссылку на регистрацию"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegistration'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegistrationResponse'
  /fIVI/api/auth/getRegEmail:
    post:
      tags:
        - auth
      summary: "Получить данные пользователя по id сессии"
      description: "Отдает почту пользователя, который пытается зарегистрироваться или имя пользователя, если он сбрасывает пароль"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegEmail'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegEmailResponse'
  /sIVI/Customer/getUser:
    get:
      security:
        - cookieAuth: []
      tags:
        - auth
      summary: "Получить текущего пользователя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
  /fIVI/api/auth/Recovery:
    post:
      tags:
        - auth
      summary: "Начать процедуру сброса пароля"
      description: "Отправляет на почту пользователя инструкцию. Необходимо указать либо почту, либо логин"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recovery'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryResponse'
  /fIVI/api/auth/register:
    post:
      tags:
        - auth
      summary: "Завершение регистрации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /fIVI/api/auth/checklogin:
    post:
      tags:
        - auth
      summary: "Проверка логина на существование"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checklogin'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /fIVI/api/auth/changemail:
    post:
      tags:
        - auth
      summary: "Подтверждение смены почты"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Changemail'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"

  # product part
              
  /sIVI/api/config/read:
    get:
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: vendor_id
          schema:
            type: string
          required: false
          description: ID производителя
      tags:
        - product
      summary: "Получить справочник из сервиса расчета (пользователь авторизован)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /fIVI/demo/api/config/read:
    get:
      tags:
        - product
      summary: "Получить справочник из сервиса расчета (пользователь неавторизован)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/api/types?&title=1&bytarget=unf_product_t&input_schema=1:
    get:
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: vendor_id
          schema:
            type: string
          required: false
          description: ID производителя
      tags:
        - product
      summary: "Получить список изделий (пользователь авторизован)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /fIVI/demo/api/types?&title=1&bytarget=unf_product_t&input_schema=1:
    get:
      tags:
        - product
      summary: "Получить список изделий (пользователь неавторизован)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/api/call?&source={currentProduct}&target=unf_product_t:
    post:
      tags:
        - product
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
          description: Тип изделия
        - in: path
          name: vendor_id
          schema:
            type: string
          required: false
          description: ID производителя
      summary: "Запросить расчет изделия (пользователь авторизован)"
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /fIVI/demo/api/call?&source={currentProduct}&target=unf_product_t:
    post:
      tags:
        - product
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
          description: Тип изделия
      summary: "Запросить расчет изделия (пользователь неавторизован)"
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Product/setBestViewCoord?&source={currentProduct}:
    post:
      tags:
        - product
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
          description: Тип изделия
      summary: "Задать координаты камеры для наилучшего обзора изделия"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamsAndCoords'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /fIVI/demo/Product/getBestViewCoord?&source={currentProduct}:
    post:
      tags:
        - product
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
          description: Тип изделия
      summary: "Получить координаты камеры для наилучшего обзора изделия"
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBestViewCoordResponse'
  /sIVI/Product/getProductById:
    post:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Получить данные об изделии"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductById'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductByIdResponse'
  /sIVI/Product/getProductsList:
    post:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Получить список изделий"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductListResponse'
  /sIVI/Product/getSections:
    get:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Получить наименования разделов изделий"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaterialsSectionsResponse'
  /sIVI/Product/getUnactualCount:
    get:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Получить общее кол-во неактуальных изделий и кол-во неактуальных изделий в разделе"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnactualCountResponse'
  /sIVI/Product/recalcAllProductsList:
    get:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Пересчитать все позиции в списке изделий"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Product/recalcSectionProductsList:
    post:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Пересчитать список изделий для выбранного раздела"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecalcSectionProductList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Product/recalcSelectProductsList:
    post:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Пересчитать выбранные позиции в списке изделий"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecalcSelectProductList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Product/getRecalcCount:
    get:
      tags:
        - product
      security:
        - cookieAuth: []
      summary: "Выдать текущее количество изделий, находящихся в процессе пересчета"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecalcCountResponse'
  /fIVI/demo/Product/get-draft?&source={currentProduct}:
    post:
      tags:
        - product
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
          description: Тип изделия
      summary: "Получить эскиз изделия по его параметрам (проброс на сервис 3d-engine)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamsAndCoords'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"    
          content:
            application/json: {}
  /fIVI/demo/Product/get-model?&source={currentProduct}:
    post:
      tags:
        - product
      parameters:
        - in: path
          name: currentProduct
          schema:
            type: string
          required: true
      summary: "Получить математическую модель изделия по его параметрам (проброс на сервис 3d-engine)"
      requestBody:
        content:
          application/json: {}
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK" 
          content:
            application/json: {}
  # profile part
  /sIVI/Profile/getUserInfo:
    get:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить данные профиля текущего пользователя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserInfoResponse'
  /sIVI/Profile/confirmNewEmail:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Подтверждение новой почты"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmNewEmail'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/sendSms:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Запрос на отправку смс для подтверждения номера телефона"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSms'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/confirmPhone:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Подтверждение номера телефона"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPhone'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/setUserFullname:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Установить ФИО пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserFullname'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/setNewPassword:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Сменить пароль"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNewPassword'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/setTokenWarningLimits:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Установить лимиты оповещений об окончании подписки"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTokenWarningLimits'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/removeCounterparty:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Удалить контрагента"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCounterparty'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/addCounterparty:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Добавить контрагента"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCounterparty'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCounterpartyResponse'
  /sIVI/Profile/editCounterparty:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Изменить контрагента"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCounterparty'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/getCounterpartyByINN:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить данные о реквизитах контрагента по его ИНН (через сервис dadata)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCounterpartyByINN'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/getBankByBIK:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить данные о реквизитах банка по его БИК"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBankByBIK'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankByBIKResponse'
  /sIVI/Profile/changeToManufactor:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Сменить роль пользователя на Производитель"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeToManufactor'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/changeToVendor:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Сменить роль пользователя на Поставщик"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeToVendor'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/editVendor:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Редактирование для роли Поставщика"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditVendor'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/getCityList:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить список населенных пунктов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCityList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCityListResponse'
  /sIVI/Profile/getRegionList:
    get:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить список регионов"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionListResponse'
  /sIVI/Profile/setProxyId:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Сохранить документ доверенности"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetProxyId'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Profile/setLogoId:
    post:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Сохранить логотип"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetLogoId'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetLogoIdResponse'
  /sIVI/Profile/getManufactorInfo:
    get:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить данные текущего пользователя - производителя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManufactorInfoResponse'
  /sIVI/Profile/getVendorInfo:
    get:
      security:
        - cookieAuth: []
      tags:
        - profile
      summary: "Получить данные текущего пользователя - поставщика"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorInfo'
  /fIVI/demo/Profile/addAgreementEvent:
    post:
      tags:
        - profile
      summary: "Добавить в лог соглашение пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAgreementEvent'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  # packs part
  /sIVI/Packs/getInfo:
    get:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Получить данные о пакетах расчета для текущего пользователя"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPacksInfo'
  /sIVI/Packs/setAgreement:
    post:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Установить флаг соглашения с тарифами и правилами расчетов"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Packs/getBuySchema:
    get:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Получить данные о вариантах покупки пакетов"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBuySchema'
  /sIVI/Packs/getBill:
    post:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Получить счет"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPacksBill'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPacksBillResponse'
  /sIVI/Packs/refuseById:
    post:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Отказаться от пакета"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefusePackById'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Packs/setOrder:
    post:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Изменить порядок следования пакетов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPacksOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Packs/sbp/getBillState:
    post:
      security:
        - cookieAuth: []
      tags:
        - packs
      summary: "Проверка статуса платежа СБП"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SbpGetBillState'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SbpGetBillStateResponse'
  /fIVI/demo/Packs/sbp/billStateWebhook:
    post:
      tags:
      - packs
      summary: "Webhook для оповещения системой СБП об изменении статуса платежей"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SbpBillStateWebhook'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  # files part
  /sIVI/Files/getDocumentById:
    post:
      security:
        - cookieAuth: []
      tags:
        - files
      summary: "Получить документ по id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentById'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentByIdResponse'
  /fIVI/demo/Files/getDocumentById:
    post:
      tags:
        - files
      summary: "Получить документ по id без авторизации пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentById'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentByIdResponse'
  /sIVI/Files/getBlankProxyDocument:
    get:
      security:
        - cookieAuth: []
      tags:
        - files
      summary: "Получить файл бланка доверенности"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentByIdResponse'
  /sIVI/Files/upload:
    post:
      security:
        - cookieAuth: []
      tags:
        - files
      summary: "Загрузить файл на сервер"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
  # order list part
  /sIVI/Orders/getList:
    post:
      security:
        - cookieAuth: []
      tags:
        - orders
      summary: "Получить список заказов текущего пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrderList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderListResponse'
  /sIVI/Order/getStates:
    get:
      security:
        - cookieAuth: []
      tags:
        - orders
      summary: "Получить список статусов заказов"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderStates'
  /sIVI/Orders/create:
    post:
      security:
        - cookieAuth: []
      tags:
        - orders
      summary: "Создать заказ на основе другого заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
  /sIVI/Order/getOrder:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получение данных для карточки заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
  /sIVI/Order/getDraft:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получение данных для страницы загрузки спецификации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDraftResponse'
  /sIVI/Order/setExcelFileId:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Подключение к заказу загруженной Excel спецификации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetExcelFileId'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
  /sIVI/Order/getCustomers:
    get:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить список возможных покупателей (для случая, когда пользователь - это производитель)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomersSchema'
  /sIVI/Order/getSpecOptions:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получение настроек выгрузки спецификации для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpecOptionsResponse'
  /sIVI/Order/recalc:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Пересчитать все неактуальные позиции заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Order/searchPositions:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Найти соответствие позиций вводимому запросу"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPositions'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPositionsResponse'
  /sIVI/Order/changePosition:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Запрос позиции на изменение"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePosition'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePositionResponse'
  /sIVI/Order/changePositions:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Запрос на изменение массива позиций"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePositions'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePositionsResponse'
  /sIVI/Order/changeSteel:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Запрос на изменение типа стали в позициях"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSteel'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSteelResponse'
  /sIVI/Order/save:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Сохранение заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveOrderResponse'
  /sIVI/Order/saveDraft:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Сохранение распознавания заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveDraft'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Order/makeOrder:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Выполнить заказ"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Order/saveSpecOptions:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Сохранить настройки выгрузки спецификации для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSpecOptionsResponse'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentByIdResponse'
  /sIVI/Order/getMaterials:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить список материалов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaterialsResponse'
  /sIVI/Order/getPayments:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить список платежных документов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentsResponse'
  /sIVI/Order/getHistory:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить историю событий для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHistoryResponse'
  /sIVI/Order/getFiles:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить список файлов для заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFilesResponse'
  /sIVI/Order/putFile:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Добавить файл в заказ"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPutFile'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Order/removeFile:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Удалить файл из заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFile'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Order/getOperations:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить список операций"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationsResponse'
  /sIVI/Order/getSpec:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить спецификацию заказа в соответствии с настройками /Order/saveSpecOptions"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: file
  /sIVI/Order/getDeliveryWays:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Получить список способов доставки поставщика"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeliveryWays'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliveryWaysResponse'
  /sIVI/Order/compareVendors:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Пересчитать заказ у другого поставщика"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompareVendors'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompareVendorsResponse'
  /sIVI/Order/createByVendors:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Создать заказы у других поставщиков"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateByVendors'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateByVendorsResponse'
  /sIVI/Order/setState:
    post:
      security:
        - cookieAuth: []
      tags:
        - order
      summary: "Изменить состояние заказа"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSetState'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/LogCalcs/getLogCalcs:
    post:
      security:
        - cookieAuth: []
      tags:
        - logcalcs
      summary: "Получить журнал расчетов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLogCalcs'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogCalcsResponse'
  /sIVI/LogCalcs/getConfigs:
    post:
      security:
        - cookieAuth: []
      tags:
        - logcalcs
      summary: "Получить список конфигураций"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigsResponse'
  /sIVI/Vendors/getVendors:
    post:
      security:
        - cookieAuth: []
      tags:
        - vendors
      summary: "Получить список поставщиков"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVendors'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorsResponse'
  /sIVI/Vendors/setRegionMapAreas:
    post:
      security:
        - cookieAuth: []
      tags:
        - vendors
      summary: "Установить для региона географические координаты, центр, масштаб"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRegionMapAreas'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Config/Common/getSchema:
    post:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Получить схему конфигурации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCommonSchema'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommonSchemaResponse'
  /sIVI/Config/getData:
    post:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Получить значения определенной секции конфигуратора"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConfigEconomic'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigEconomicResponse'
  /sIVI/Config/Materials/getSections:
    get:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Получить список разделов материалов"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaterialsSectionsResponse'
  /sIVI/Config/Materials/getMaterials:
    post:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Получить список материалов для конфигурации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConfigMaterials'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigMaterialsResponse'
  /sIVI/Config/Materials/setPrices:
    post:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Сохранить цены для материалов"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMaterialPrices'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Config/Economic/getEconomic:
    post:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Получить список экономических параметров"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConfigEconomic'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigEconomicResponse'
  /sIVI/Config/Economic/setParamValue:
    post:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Сохранить значения экономических параметров"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetEconomicParamValue'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Config/getModel:
    get:
      security:
        - cookieAuth: []
      tags:
        - config
      summary: "Получить JSON описывающий права пользователей и статусную модель управления заказами"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigModelResponse'
  /fIVI/demo/Help/getLegalSections:
    get:
      tags:
        - help
      summary: "Получить разделы юридической документации"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLegalSectionsResponse'
  /fIVI/demo/Help/getTechSections:
    get:
      tags:
        - help
      summary: "Получить разделы технической документации"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLegalSectionsResponse'
  /fIVI/demo/Help/getUserAgreement:
    get:
      tags:
        - help
      summary: "Получить содержимое пользовательского соглашения (формат MarkDown)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserAgreementResponse'
  /fIVI/demo/Help/getContacts:
    get:
      tags:
        - help
      summary: "Получить собственные контактные данные"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactsResponse'
  /sIVI/Help/saveHelpById:
    post:
      security:
        - cookieAuth: []
      tags:
        - help
      summary: "Сохранить документ хелпа по его id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelpSaveHelpById'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Statistic/getInfo:
    get:
      security:
        - cookieAuth: []
      tags:
        - statistic
      summary: "Получить общие данные для отображения фишек в главном меню"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticGetInfo'
  /sIVI/Downloads/getList:
    get:
      security:
        - cookieAuth: []
      tags:
        - downloads
      summary: "Получить список загрузок"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadsGetList'
  /sIVI/News/getList:
    get:
      security:
        - cookieAuth: []
      tags:
        - news
      summary: "Получить список новостей"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsGetList'
  /sIVI/News/setReadFlag:
    post:
      security:
        - cookieAuth: []
      tags:
        - news
      summary: "Установить/снять флаг прочтения новостей"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsSetReadFlag'
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Payments/getList:
    post:
      security:
        - cookieAuth: []
      tags:
        - payments
      summary: "Получить список платежей"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPaymentsList'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentsListResponse'
  /fIVI/demo/Chat/getLastMessages:
    post:
      tags:
        - chat
      summary: "Получить последние сообщения в чате (пользователь неавторизован)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDemoLastMessages'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesResponse'
  /fIVI/demo/Chat/getHistoryMessages:
    post:
      tags:
        - chat
      summary: "Получить все сообщения в чате (пользователь неавторизован)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDemoLastMessages'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesResponse'
  /sIVI/Chat/getLastMessages:
    get:
      tags:
        - chat
      security:
        - cookieAuth: []
      summary: "Получить последние сообщения в чате (пользователь авторизован)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesResponse'
  /sIVI/Chat/getHistoryMessages:
    get:
      tags:
        - chat
      security:
        - cookieAuth: []
      summary: "Получить все сообщения в чате (пользователь авторизован)"
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesResponse'
  /fIVI/demo/Chat/postMessage:
    post:
      tags:
        - chat
      summary: "Добавить сообщение в чат (пользователь неавторизован)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDemoMessage'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"
  /sIVI/Chat/postMessage:
    post:
      tags:
        - chat
      security:
        - cookieAuth: []
      summary: "Добавить сообщение в чат (пользователь авторизован)"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMessage'
        required: true
      responses:
        401:
          description: "Error"
        200:
          description: "OK"